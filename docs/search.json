[
  {
    "objectID": "course-support.html",
    "href": "course-support.html",
    "title": "Course FAQ & Resources",
    "section": "",
    "text": "If you have a question during class, please ask! You cannot learn programming without (1) making ‚Äúsilly‚Äù mistakes, and (2) asking ‚Äúsilly‚Äù questions. The simplest errors to fix are things like typos, and they happen to everyone.\nIf you manage to produce an error I haven‚Äôt seen before, then congratulations! üëè You have achieved something special, and that achievement should be celebrated. üéâ Each new and bizarre error is an opportunity to learn a bit more about the programming language, the operating system, or the interaction between the two. Some of my favorite students in past courses have been those who were unafraid to ask questions. Most of the time, they were asking questions that other people had or could learn from.\nBe fearless!",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-support.html#im-afraid-to-ask-questions-in-class",
    "href": "course-support.html#im-afraid-to-ask-questions-in-class",
    "title": "Course FAQ & Resources",
    "section": "",
    "text": "If you have a question during class, please ask! You cannot learn programming without (1) making ‚Äúsilly‚Äù mistakes, and (2) asking ‚Äúsilly‚Äù questions. The simplest errors to fix are things like typos, and they happen to everyone.\nIf you manage to produce an error I haven‚Äôt seen before, then congratulations! üëè You have achieved something special, and that achievement should be celebrated. üéâ Each new and bizarre error is an opportunity to learn a bit more about the programming language, the operating system, or the interaction between the two. Some of my favorite students in past courses have been those who were unafraid to ask questions. Most of the time, they were asking questions that other people had or could learn from.\nBe fearless!",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-support.html#how-can-i-get-extra-help",
    "href": "course-support.html#how-can-i-get-extra-help",
    "title": "Course FAQ & Resources",
    "section": "How can I get extra help?",
    "text": "How can I get extra help?\nOffice hours are available by appointment at this link. In general, office hours will be via Zoom - this allows me to offer more availability, and doesn‚Äôt require you to come to East campus to visit my office. If you‚Äôd prefer to meet in person, try to schedule your appointment on Monday or Wednesday, and mention in the request that you want an in-person meeting. I will let you know if that‚Äôs feasible given my schedule for the day.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-support.html#can-i-send-you-an-email",
    "href": "course-support.html#can-i-send-you-an-email",
    "title": "Course FAQ & Resources",
    "section": "Can I send you an email?",
    "text": "Can I send you an email?\nOf course!\nWith that said, if you have a question about course policies or content, it is probably better to use the Canvas discussion board, so that other people can also benefit from the information.\nIf you have a question about personal matters that may not be appropriate for the public course forum (e.g., illness, grades, accommodations, etc.), email is the perfect venue. Please add ‚ÄúSTAT151‚Äù to the subject line, so that I can prioritize your email.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-support.html#where-can-i-get-extra-support-with-academics-and-study-habits",
    "href": "course-support.html#where-can-i-get-extra-support-with-academics-and-study-habits",
    "title": "Course FAQ & Resources",
    "section": "Where can I get extra support with academics and study habits?",
    "text": "Where can I get extra support with academics and study habits?\nThere are times you may need help with the class that is beyond what I can provide. In those instances, please visit the Center for Academic Success and Transition (CAST). CAST offers free services to all students.\nStudents have access to peer tutoring, academic coaching, and academic success workshops.\nYour student fees are already paying for these centers, so you may as well use them early and often! Build good study habits early - they will reward you for the rest of your academic career.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-support.html#im-not-doing-so-well-mentallyphysicallyemotionally.-where-can-i-get-help",
    "href": "course-support.html#im-not-doing-so-well-mentallyphysicallyemotionally.-where-can-i-get-help",
    "title": "Course FAQ & Resources",
    "section": "I‚Äôm not doing so well (mentally/physically/emotionally). Where can I get help?",
    "text": "I‚Äôm not doing so well (mentally/physically/emotionally). Where can I get help?\nYour mental health and wellness extremely important, and the university offers resources to help! UNL offers several resources for students to manage stress, seek help with well-being, and access crisis and long-term care.\n\nCounseling and Psychological Services (CAPS), 402-472-7450\nCenter for Advocacy, Response, & Education (CARE), 402-472-3553 ‚Äì resources for victims/survivors of interpersonal violence.\nServices for Students with Disabilities (SSD), ssd@unl.edu or 402-472-3787 ‚Äì resources for students experiencing short or long-term disabilities that affect the campus or educational experience.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-support.html#something-terrible-happened-to-my-computer.-how-can-i-still-participate-in-class",
    "href": "course-support.html#something-terrible-happened-to-my-computer.-how-can-i-still-participate-in-class",
    "title": "Course FAQ & Resources",
    "section": "Something terrible happened to my computer. How can I still participate in class?",
    "text": "Something terrible happened to my computer. How can I still participate in class?\nStudents who do not have a working computer can check out a loaner laptop from HuskerTech on city campus (Love South, Adele Hall) and east campus (Dinsdale).\nIf you are unable to get a loaner laptop set up with the software required for parts of this course, please try to let me know ahead of time - I may be able to assist you with browser-based solutions or a department loaner laptop.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-support.html#can-i-use-ai-in-this-course",
    "href": "course-support.html#can-i-use-ai-in-this-course",
    "title": "Course FAQ & Resources",
    "section": "Can I use AI in this course?",
    "text": "Can I use AI in this course?\nWell, I really can‚Äôt stop you.\nAI is pretty cool, if you‚Äôre using it as a personal tutor and asking it to explain why ___ happens or what ___ code does.\nIf you‚Äôre using it to do your homework, though, you‚Äôre cheating yourself out of the main thing I can provide you in this class: specific guidance as to how to learn new programming skills efficiently and effectively. Using AI to complete assignments is like using the washer spin cycle to meet your step goal for the day ‚Äì you might get the illusion of success, but eventually it will catch up to you.\nI‚Äôm pretty good at detecting AI use and at knowing what a standard response to the homework questions should be. I‚Äôve also added in-person exams to this course. And even if those measures weren‚Äôt enough, I have a syllabus policy that allows me to replace any grade with an oral exam on your submission. If you can‚Äôt tell me exactly why you did what you did, and what each function does, then ‚Ä¶ you‚Äôre not going to get credit for your answer.\nI‚Äôm not completely anti-AI - it may have a place in accelerating programming in certain contexts. But the goal of this course is to help you build the foundation to program with data, and using AI to do that is only going to make later classes much, much harder.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-links.html",
    "href": "course-links.html",
    "title": "Useful links",
    "section": "",
    "text": "Canvas\nAssignment Submissions, Reading Quizzes, Gradebook\n\n\n\nAssignment Submissions (after Spring Break)\n\n\nüìö Statistical Computing in R and Python\nTextbook",
    "crumbs": [
      "Course information",
      "Course Resources"
    ]
  },
  {
    "objectID": "course-links.html#books",
    "href": "course-links.html#books",
    "title": "Useful links",
    "section": "Books",
    "text": "Books\n\nR for Data Science\nPython for Everybody\nPython for Data Analysis - Available online for free if you register with your UNL email address.\nPython Data Science Handbook - Available online for free if you register with your UNL email address.\nAdvanced R",
    "crumbs": [
      "Course information",
      "Course Resources"
    ]
  },
  {
    "objectID": "course-links.html#videos",
    "href": "course-links.html#videos",
    "title": "Useful links",
    "section": "Videos",
    "text": "Videos\n\nTidyTuesday Data Analyses - TidyTuesday is an R project to screencast the data analysis process. Every Tuesday, they take on a new data set, and this provides an excellent way to see how the things you‚Äôre learning in class translate to real data.",
    "crumbs": [
      "Course information",
      "Course Resources"
    ]
  },
  {
    "objectID": "weeks/week-15.html",
    "href": "weeks/week-15.html",
    "title": "Week 15: Review",
    "section": "",
    "text": "Come with a list of questions for the review session\n\n\n\n\n\nIn-class exam review",
    "crumbs": [
      "Weekly materials",
      "Week 15 - Review"
    ]
  },
  {
    "objectID": "weeks/week-15.html#prepare-for-class",
    "href": "weeks/week-15.html#prepare-for-class",
    "title": "Week 15: Review",
    "section": "",
    "text": "Come with a list of questions for the review session",
    "crumbs": [
      "Weekly materials",
      "Week 15 - Review"
    ]
  },
  {
    "objectID": "weeks/week-15.html#wednesday",
    "href": "weeks/week-15.html#wednesday",
    "title": "Week 15: Review",
    "section": "",
    "text": "In-class exam review",
    "crumbs": [
      "Weekly materials",
      "Week 15 - Review"
    ]
  },
  {
    "objectID": "weeks/week-13.html",
    "href": "weeks/week-13.html",
    "title": "Week 13: Reshaping Data",
    "section": "",
    "text": "Reshaping Data\n\n\n\n\nWeek 13 Reading Quiz\n\n\n\n\n\n\nManually try to convert data from wide-to-long and long-to-wide in Excel with copy/paste.\n\n\n\n\n\nWide to long and long to wide operations\nDrawing pictures to help with planning code\n\n\n\n\n\nHomework 11 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 13 - Reshaping Data"
    ]
  },
  {
    "objectID": "weeks/week-13.html#reading",
    "href": "weeks/week-13.html#reading",
    "title": "Week 13: Reshaping Data",
    "section": "",
    "text": "Reshaping Data\n\n\n\n\nWeek 13 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 13 - Reshaping Data"
    ]
  },
  {
    "objectID": "weeks/week-13.html#prepare-for-class",
    "href": "weeks/week-13.html#prepare-for-class",
    "title": "Week 13: Reshaping Data",
    "section": "",
    "text": "Manually try to convert data from wide-to-long and long-to-wide in Excel with copy/paste.",
    "crumbs": [
      "Weekly materials",
      "Week 13 - Reshaping Data"
    ]
  },
  {
    "objectID": "weeks/week-13.html#wednesday",
    "href": "weeks/week-13.html#wednesday",
    "title": "Week 13: Reshaping Data",
    "section": "",
    "text": "Wide to long and long to wide operations\nDrawing pictures to help with planning code",
    "crumbs": [
      "Weekly materials",
      "Week 13 - Reshaping Data"
    ]
  },
  {
    "objectID": "weeks/week-13.html#practice-your-skills",
    "href": "weeks/week-13.html#practice-your-skills",
    "title": "Week 13: Reshaping Data",
    "section": "",
    "text": "Homework 11 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 13 - Reshaping Data"
    ]
  },
  {
    "objectID": "weeks/week-11.html",
    "href": "weeks/week-11.html",
    "title": "Week 11: Data Cleaning",
    "section": "",
    "text": "Data Cleaning and Manipulation\n\n\n\n\nWeek 11 Reading Quiz\n\n\n\n\n\n\nMake yourself a cheat sheet of which functions to use for different R and python data manipulation tasks.\n\n\n\n\n\nData Cleaning Verbs\nThinking through data processing tasks\n\n\n\n\n\nHomework 9 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 11 - Data Cleaning"
    ]
  },
  {
    "objectID": "weeks/week-11.html#reading",
    "href": "weeks/week-11.html#reading",
    "title": "Week 11: Data Cleaning",
    "section": "",
    "text": "Data Cleaning and Manipulation\n\n\n\n\nWeek 11 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 11 - Data Cleaning"
    ]
  },
  {
    "objectID": "weeks/week-11.html#prepare-for-class",
    "href": "weeks/week-11.html#prepare-for-class",
    "title": "Week 11: Data Cleaning",
    "section": "",
    "text": "Make yourself a cheat sheet of which functions to use for different R and python data manipulation tasks.",
    "crumbs": [
      "Weekly materials",
      "Week 11 - Data Cleaning"
    ]
  },
  {
    "objectID": "weeks/week-11.html#wednesday",
    "href": "weeks/week-11.html#wednesday",
    "title": "Week 11: Data Cleaning",
    "section": "",
    "text": "Data Cleaning Verbs\nThinking through data processing tasks",
    "crumbs": [
      "Weekly materials",
      "Week 11 - Data Cleaning"
    ]
  },
  {
    "objectID": "weeks/week-11.html#practice-your-skills",
    "href": "weeks/week-11.html#practice-your-skills",
    "title": "Week 11: Data Cleaning",
    "section": "",
    "text": "Homework 9 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 11 - Data Cleaning"
    ]
  },
  {
    "objectID": "weeks/week-09.html",
    "href": "weeks/week-09.html",
    "title": "Week 9: Version Control",
    "section": "",
    "text": "Git and Github\n\n\n\n\nWeek 9 Reading Quiz\n\n\n\n\n\n\nSign up for a GitHub account. You can use any email address, but make your username professionally appropriate so that you can use this account throughout your undergraduate career to host portfolios, projects, etc.\n\n\n\n\n\nUsing git and github\n\n\n\n\n\nHomework 7 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 9 - Version Control"
    ]
  },
  {
    "objectID": "weeks/week-09.html#reading",
    "href": "weeks/week-09.html#reading",
    "title": "Week 9: Version Control",
    "section": "",
    "text": "Git and Github\n\n\n\n\nWeek 9 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 9 - Version Control"
    ]
  },
  {
    "objectID": "weeks/week-09.html#prepare-for-class",
    "href": "weeks/week-09.html#prepare-for-class",
    "title": "Week 9: Version Control",
    "section": "",
    "text": "Sign up for a GitHub account. You can use any email address, but make your username professionally appropriate so that you can use this account throughout your undergraduate career to host portfolios, projects, etc.",
    "crumbs": [
      "Weekly materials",
      "Week 9 - Version Control"
    ]
  },
  {
    "objectID": "weeks/week-09.html#wednesday",
    "href": "weeks/week-09.html#wednesday",
    "title": "Week 9: Version Control",
    "section": "",
    "text": "Using git and github",
    "crumbs": [
      "Weekly materials",
      "Week 9 - Version Control"
    ]
  },
  {
    "objectID": "weeks/week-09.html#practice-your-skills",
    "href": "weeks/week-09.html#practice-your-skills",
    "title": "Week 9: Version Control",
    "section": "",
    "text": "Homework 7 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 9 - Version Control"
    ]
  },
  {
    "objectID": "weeks/week-07.html",
    "href": "weeks/week-07.html",
    "title": "Week 7: Functions",
    "section": "",
    "text": "Writing Functions\n\n\n\n\nWeek 7 Reading Quiz\n\n\n\n\n\n\nTake the Mid semester Survey on Canvas\nThis provides me with helpful feedback and lets me calibrate the course for the 2nd half of the semester.\nHomework resubmission deadline is next week! Be sure to finish up any homework you‚Äôd like to resubmit.\n\n\n\n\n\nHomework 6",
    "crumbs": [
      "Weekly materials",
      "Week 7 - Functions"
    ]
  },
  {
    "objectID": "weeks/week-07.html#reading",
    "href": "weeks/week-07.html#reading",
    "title": "Week 7: Functions",
    "section": "",
    "text": "Writing Functions\n\n\n\n\nWeek 7 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 7 - Functions"
    ]
  },
  {
    "objectID": "weeks/week-07.html#prepare-for-class",
    "href": "weeks/week-07.html#prepare-for-class",
    "title": "Week 7: Functions",
    "section": "",
    "text": "Take the Mid semester Survey on Canvas\nThis provides me with helpful feedback and lets me calibrate the course for the 2nd half of the semester.\nHomework resubmission deadline is next week! Be sure to finish up any homework you‚Äôd like to resubmit.",
    "crumbs": [
      "Weekly materials",
      "Week 7 - Functions"
    ]
  },
  {
    "objectID": "weeks/week-07.html#practice-your-skills",
    "href": "weeks/week-07.html#practice-your-skills",
    "title": "Week 7: Functions",
    "section": "",
    "text": "Homework 6",
    "crumbs": [
      "Weekly materials",
      "Week 7 - Functions"
    ]
  },
  {
    "objectID": "weeks/week-05.html",
    "href": "weeks/week-05.html",
    "title": "Week 5: Data Structures",
    "section": "",
    "text": "Data Structures\n\n\n\n\nWeek 5 Reading Quiz\n\n\n\n\n\n\nDownload and read through the homework assignment\n\n\n\n\n\nData Structures and Indexing\n\n\n\n\n\nHomework 4",
    "crumbs": [
      "Weekly materials",
      "Week 5 - Data Structures"
    ]
  },
  {
    "objectID": "weeks/week-05.html#reading",
    "href": "weeks/week-05.html#reading",
    "title": "Week 5: Data Structures",
    "section": "",
    "text": "Data Structures\n\n\n\n\nWeek 5 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 5 - Data Structures"
    ]
  },
  {
    "objectID": "weeks/week-05.html#prepare-for-class",
    "href": "weeks/week-05.html#prepare-for-class",
    "title": "Week 5: Data Structures",
    "section": "",
    "text": "Download and read through the homework assignment",
    "crumbs": [
      "Weekly materials",
      "Week 5 - Data Structures"
    ]
  },
  {
    "objectID": "weeks/week-05.html#wednesday",
    "href": "weeks/week-05.html#wednesday",
    "title": "Week 5: Data Structures",
    "section": "",
    "text": "Data Structures and Indexing",
    "crumbs": [
      "Weekly materials",
      "Week 5 - Data Structures"
    ]
  },
  {
    "objectID": "weeks/week-05.html#practice-your-skills",
    "href": "weeks/week-05.html#practice-your-skills",
    "title": "Week 5: Data Structures",
    "section": "",
    "text": "Homework 4",
    "crumbs": [
      "Weekly materials",
      "Week 5 - Data Structures"
    ]
  },
  {
    "objectID": "weeks/week-03.html",
    "href": "weeks/week-03.html",
    "title": "Week 3: Intro to Programming",
    "section": "",
    "text": "Introduction to Programming\n\n\n\n\nWeek 3 Reading Quiz\n\n\n\n\n\n\nDownload and read through the homework assignment\n\n\n\n\n\nCues to look for in Rstudio\n\n\n\n\n\nHomework 2",
    "crumbs": [
      "Weekly materials",
      "Week 3 - Intro to Programming"
    ]
  },
  {
    "objectID": "weeks/week-03.html#reading",
    "href": "weeks/week-03.html#reading",
    "title": "Week 3: Intro to Programming",
    "section": "",
    "text": "Introduction to Programming\n\n\n\n\nWeek 3 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 3 - Intro to Programming"
    ]
  },
  {
    "objectID": "weeks/week-03.html#prepare-for-class",
    "href": "weeks/week-03.html#prepare-for-class",
    "title": "Week 3: Intro to Programming",
    "section": "",
    "text": "Download and read through the homework assignment",
    "crumbs": [
      "Weekly materials",
      "Week 3 - Intro to Programming"
    ]
  },
  {
    "objectID": "weeks/week-03.html#wednesday",
    "href": "weeks/week-03.html#wednesday",
    "title": "Week 3: Intro to Programming",
    "section": "",
    "text": "Cues to look for in Rstudio",
    "crumbs": [
      "Weekly materials",
      "Week 3 - Intro to Programming"
    ]
  },
  {
    "objectID": "weeks/week-03.html#practice-your-skills",
    "href": "weeks/week-03.html#practice-your-skills",
    "title": "Week 3: Intro to Programming",
    "section": "",
    "text": "Homework 2",
    "crumbs": [
      "Weekly materials",
      "Week 3 - Intro to Programming"
    ]
  },
  {
    "objectID": "weeks/week-01.html",
    "href": "weeks/week-01.html",
    "title": "Week 1: Setting Up",
    "section": "",
    "text": "Syllabus\nComputer Basics\nSetting Up Your Computer\n\n\n\n\nReading Quiz 0 ‚Äì Syllabus and Introductory Material\nWeek 1 Reading Quiz\n\n\n\n\n\n\nTry to set up your computer with R, RStudio, Python, and quarto\n\n\n\n\n\nSyllabus\nIntroductions\nClass Picture (for Dr.¬†Vanderplas‚Äôs face blindness)\nSet up your laptop!",
    "crumbs": [
      "Weekly materials",
      "Week 1 - Setting Up"
    ]
  },
  {
    "objectID": "weeks/week-01.html#reading",
    "href": "weeks/week-01.html#reading",
    "title": "Week 1: Setting Up",
    "section": "",
    "text": "Syllabus\nComputer Basics\nSetting Up Your Computer\n\n\n\n\nReading Quiz 0 ‚Äì Syllabus and Introductory Material\nWeek 1 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 1 - Setting Up"
    ]
  },
  {
    "objectID": "weeks/week-01.html#prepare-for-class",
    "href": "weeks/week-01.html#prepare-for-class",
    "title": "Week 1: Setting Up",
    "section": "",
    "text": "Try to set up your computer with R, RStudio, Python, and quarto",
    "crumbs": [
      "Weekly materials",
      "Week 1 - Setting Up"
    ]
  },
  {
    "objectID": "weeks/week-01.html#wednesday",
    "href": "weeks/week-01.html#wednesday",
    "title": "Week 1: Setting Up",
    "section": "",
    "text": "Syllabus\nIntroductions\nClass Picture (for Dr.¬†Vanderplas‚Äôs face blindness)\nSet up your laptop!",
    "crumbs": [
      "Weekly materials",
      "Week 1 - Setting Up"
    ]
  },
  {
    "objectID": "slides/05-data-types.html#essential-data-types",
    "href": "slides/05-data-types.html#essential-data-types",
    "title": "Data Types",
    "section": "Essential Data Types",
    "text": "Essential Data Types\n\nList\n\nheterogeneous (can hold different things)\nno real other constraints\nin R, list components can be named\nin Python, list components are not named\nindexed numerically (R and Python) and by names (R)"
  },
  {
    "objectID": "slides/05-data-types.html#essential-data-types-1",
    "href": "slides/05-data-types.html#essential-data-types-1",
    "title": "Data Types",
    "section": "Essential Data Types",
    "text": "Essential Data Types\n\nData Frame\n\nheterogeneous (can hold different things)\ncollection of vectors or lists of the same length\naccess pieces\n\nnumerical indexing (R and Python)\nby column names (R and Python)\nby row names (Python, mostly)\n\n\n\nA data frame is just a list with additional constraints (in R)"
  },
  {
    "objectID": "slides/05-data-types.html#creating-data-frames",
    "href": "slides/05-data-types.html#creating-data-frames",
    "title": "Data Types",
    "section": "Creating Data Frames",
    "text": "Creating Data Frames\n\n\n\nmydf &lt;- data.frame(a = 1:10, b = letters[1:10])\nhead(mydf)\n\n  a b\n1 1 a\n2 2 b\n3 3 c\n4 4 d\n5 5 e\n6 6 f\n\n\n\n\nimport numpy as np\nimport pandas as pd\nimport string\n\nmydf = pd.DataFrame({\n  'a': np.array(range(0,10)), \n  'b': list(string.ascii_lowercase[0:10])\n})\n\nmydf\n\n   a  b\n0  0  a\n1  1  b\n2  2  c\n3  3  d\n4  4  e\n5  5  f\n6  6  g\n7  7  h\n8  8  i\n9  9  j"
  },
  {
    "objectID": "slides/05-data-types.html#indexing-data-frames",
    "href": "slides/05-data-types.html#indexing-data-frames",
    "title": "Data Types",
    "section": "Indexing Data Frames",
    "text": "Indexing Data Frames\nSelecting a column by name:\n\nmydf$a # get column a as a vector\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nmydf[[\"a\"]]\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nmydf[\"a\"] # This gets a single-col data frame, not a vector\n\n    a\n1   1\n2   2\n3   3\n4   4\n5   5\n6   6\n7   7\n8   8\n9   9\n10 10\n\n\n\nmydf[\"a\"]\n\n0    0\n1    1\n2    2\n3    3\n4    4\n5    5\n6    6\n7    7\n8    8\n9    9\nName: a, dtype: int64\n\nmydf.a\n\n0    0\n1    1\n2    2\n3    3\n4    4\n5    5\n6    6\n7    7\n8    8\n9    9\nName: a, dtype: int64\n\nmydf.loc[:,\"a\"]\n\n0    0\n1    1\n2    2\n3    3\n4    4\n5    5\n6    6\n7    7\n8    8\n9    9\nName: a, dtype: int64"
  },
  {
    "objectID": "slides/05-data-types.html#indexing-data-frames-1",
    "href": "slides/05-data-types.html#indexing-data-frames-1",
    "title": "Data Types",
    "section": "Indexing Data Frames",
    "text": "Indexing Data Frames\nSelecting a column by position:\n\nmydf[,1] # get all rows, first col\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nmydf[2:5, 2] # get rows 2-5, second col\n\n[1] \"b\" \"c\" \"d\" \"e\"\n\nmydf[[1]]\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nmydf[1] # This gets a data frame with the first column\n\n    a\n1   1\n2   2\n3   3\n4   4\n5   5\n6   6\n7   7\n8   8\n9   9\n10 10\n\n\n\nmydf.iloc[:,0] # get all rows, first column\n\n0    0\n1    1\n2    2\n3    3\n4    4\n5    5\n6    6\n7    7\n8    8\n9    9\nName: a, dtype: int64\n\nmydf.iloc[1:5,1] # get rows 2-5 (1-4 by python indexing) \n                 # in the second column (index = 1)\n\n1    b\n2    c\n3    d\n4    e\nName: b, dtype: object"
  },
  {
    "objectID": "slides/03-intro.html#cues-where-am-i",
    "href": "slides/03-intro.html#cues-where-am-i",
    "title": "Intro to Programming",
    "section": "Cues: Where am I?",
    "text": "Cues: Where am I?\n\n\nWhat does the prompt look like? &gt;, $, &gt;&gt;&gt;, %\n\nIndication of what language the computer expects\nR, Terminal (BASH, ZSH, CMD, Powershell), Python\n\nHow do you run the code?\n\npython3 &lt;file.py&gt;, Ctrl/Cmd + Enter, hit Enter, ‚Ä¶\n\nWhat folder is the computer looking in? (working directory)\nWhat program are you operating in? (RStudio, Cmd.exe, Terminal, etc.)"
  },
  {
    "objectID": "slides/03-intro.html#scripts",
    "href": "slides/03-intro.html#scripts",
    "title": "Intro to Programming",
    "section": "Scripts",
    "text": "Scripts\nHomework 2 will ask you to download and run a script in Python.\n![Right click -\\&gt; Save Page As... -\\&gt; `madlibs.py` ](images/clipboard-2196485650.png){fig-alt=\"A screenshot of the madlibs.py file linked in Homework 2, with the instructions on how to save the file: Right click, save page as, and give the file the name `madlibs.py`.\"}"
  },
  {
    "objectID": "slides/03-intro.html#scripts-1",
    "href": "slides/03-intro.html#scripts-1",
    "title": "Intro to Programming",
    "section": "Scripts",
    "text": "Scripts\n\nNavigate using the terminal so that you are in the same working directory as madlibs.py\n\nYou can get the file path in Windows by navigating in the file browser to the file, and Shift-Right click -&gt; Copy as path\nMac should allow you to open a terminal in a folder with shift-click (I think)"
  },
  {
    "objectID": "slides/03-intro.html#scripts-in-rstudio",
    "href": "slides/03-intro.html#scripts-in-rstudio",
    "title": "Intro to Programming",
    "section": "Scripts in RStudio",
    "text": "Scripts in RStudio\n\nThen, open the script in RStudio\nCan you run it in RStudio somehow?"
  },
  {
    "objectID": "slides/01-intro.html#stat-151",
    "href": "slides/01-intro.html#stat-151",
    "title": "Welcome to Stat 151!",
    "section": "Stat 151",
    "text": "Stat 151\n\nGentle introduction to programming\n1st half: Basic programming concepts\n\nvariables\ndata types\nif statements\nloops\nfunctions\n\n2nd half: Simple programming with data"
  },
  {
    "objectID": "slides/01-intro.html#about-me",
    "href": "slides/01-intro.html#about-me",
    "title": "Welcome to Stat 151!",
    "section": "About Me",
    "text": "About Me\n\n\n\nAssociate Professor in Statistics\nResearch:\n\nData Visualization\nStatistical Algorithms for Forensics\nReproducibility\nData Science pipelines\n\n\n\n\n\n\n\n\n\n¬†\n\n\n\n\n\nAlex (left), Ryan (right), and Zoey (top)\n\n\n\n\n¬†\n\n\n\n\n\n\nVideo\nEdison (Eddie)\n\n\n\n\n\n\nVideo\nIvy"
  },
  {
    "objectID": "slides/01-intro.html#about-me-1",
    "href": "slides/01-intro.html#about-me-1",
    "title": "Welcome to Stat 151!",
    "section": "About Me",
    "text": "About Me\n\nI have prosopagnosia\n\n\nImage source: https://susilolab.org/Prosopagnosia.html"
  },
  {
    "objectID": "slides/01-intro.html#introductions",
    "href": "slides/01-intro.html#introductions",
    "title": "Welcome to Stat 151!",
    "section": "Introductions",
    "text": "Introductions\n\nYour name\nYour major\nWhat is the best prank you‚Äôve ever experienced or planned?"
  },
  {
    "objectID": "slides/01-intro.html#class-picture",
    "href": "slides/01-intro.html#class-picture",
    "title": "Welcome to Stat 151!",
    "section": "Class Picture",
    "text": "Class Picture\nLet‚Äôs all time travel back to elementary school‚Ä¶\n(but seriously, help a face-blind prof out)"
  },
  {
    "objectID": "slides/01-intro.html#class-structure",
    "href": "slides/01-intro.html#class-structure",
    "title": "Welcome to Stat 151!",
    "section": "Class Structure",
    "text": "Class Structure\n\nFlipped classroom\nYou prepare for class on your own\nWe‚Äôll do a (very short) review at the start of class\nMost of class will be working on the homework\nI can help you get through the frustrating bits more quickly!"
  },
  {
    "objectID": "slides/01-intro.html#grades",
    "href": "slides/01-intro.html#grades",
    "title": "Welcome to Stat 151!",
    "section": "Grades",
    "text": "Grades\n\n\n\nAssignments\nWeight\n\n\n\n\nReading Quizzes\n10%\n\n\nAttendance & Participation\n10%\n\n\nWeekly Homeworks\n40%\n\n\nMidterm Exam\n20%\n\n\nFinal Exam\n20%"
  },
  {
    "objectID": "slides/01-intro.html#reading-quizzes",
    "href": "slides/01-intro.html#reading-quizzes",
    "title": "Welcome to Stat 151!",
    "section": "Reading Quizzes",
    "text": "Reading Quizzes\n\nDue before class starts\nWill become inaccessible at 1pm on Wednesdays\nOpen-book, open-note\nA deadline to encourage you to do the reading before class"
  },
  {
    "objectID": "slides/01-intro.html#participationattendance",
    "href": "slides/01-intro.html#participationattendance",
    "title": "Welcome to Stat 151!",
    "section": "Participation/Attendance",
    "text": "Participation/Attendance\n\nI will take attendance\nYou get one free, no excuses necessary absence\nIf you‚Äôre sick, don‚Äôt come to class!\n\nDo the reading/homework,\nMake an appointment as you feel better\nIn the appointment field, indicate that this is to substitute for class attendance\nDon‚Äôt abuse this"
  },
  {
    "objectID": "slides/01-intro.html#homework",
    "href": "slides/01-intro.html#homework",
    "title": "Welcome to Stat 151!",
    "section": "Homework",
    "text": "Homework\n\nAlmost every week\nHomework can be resubmitted once for a re-grade\nResubmissions are due on the Monday before the exam\n\nMarch 10 (midterm)\nMay 5 (final)\n(I can‚Äôt make things due during finals week)"
  },
  {
    "objectID": "slides/01-intro.html#exams",
    "href": "slides/01-intro.html#exams",
    "title": "Welcome to Stat 151!",
    "section": "Exams",
    "text": "Exams\n\nIn-class exam (March 12) and Final (May 15, 1-3pm)\nDon‚Äôt miss the exams!\nIf you miss the midterm AND notify me beforehand AND have a valid excuse‚Ä¶\nthe final is worth 40%\nIf you miss the final AND notify me beforehand AND have a valid excuse‚Ä¶\nIncomplete + make up final w/ an oral exam component"
  },
  {
    "objectID": "slides/01-intro.html#oral-exam-policy",
    "href": "slides/01-intro.html#oral-exam-policy",
    "title": "Welcome to Stat 151!",
    "section": "Oral Exam Policy",
    "text": "Oral Exam Policy\n\nYou must understand any code you turn in\nIf you can‚Äôt explain it to me and answer my questions, you don‚Äôt get credit\nI will send an oral exam request via canvas/email\nYou must schedule an appt within 24h (appt within 3 business days)\nI‚Äôll ask you questions about your submission"
  },
  {
    "objectID": "slides/01-intro.html#class-environment",
    "href": "slides/01-intro.html#class-environment",
    "title": "Welcome to Stat 151!",
    "section": "Class Environment",
    "text": "Class Environment\n\nProgramming = making silly mistakes\nThe easiest mistakes to fix are typos! Don‚Äôt be embarrassed about them!\nNew errors = new things to learn!"
  },
  {
    "objectID": "slides/01-intro.html#goals-for-today",
    "href": "slides/01-intro.html#goals-for-today",
    "title": "Welcome to Stat 151!",
    "section": "Goals for today",
    "text": "Goals for today\n\nInstall R\nInstall Python\nInstall RStudio\nInstall quarto"
  },
  {
    "objectID": "homework/11-reshape.html",
    "href": "homework/11-reshape.html",
    "title": "Homework: Data Transformations",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\nThis week‚Äôs assignment uses data from Tidy Tuesday (link) and relates to food consumption and CO2 emissions.\n\n# Credit to Kasia and minorly edited to create output file and test plot\n# Blog post at https://r-tastic.co.uk/post/from-messy-to-tidy/\nlibrary(rvest)\nlibrary(dplyr)\n\nurl &lt;- \"https://web.archive.org/web/20191224072125/https://www.nu3.de/blogs/nutrition/food-carbon-footprint-index-2018\"\n\n# scrape the website\nurl_html &lt;- read_html(url)\n\n# extract the HTML table\nwhole_table &lt;- url_html %&gt;% \n  html_nodes('table') %&gt;%\n  html_table(fill = TRUE) %&gt;%\n  .[[2]]\n\nError in .[[2]]: subscript out of bounds\n\ntable_content &lt;- whole_table %&gt;%\n  select(-X1) %&gt;% # remove redundant column\n  filter(!dplyr::row_number() %in% 1:3) # remove redundant rows\n\nError in eval(expr, envir, enclos): object 'whole_table' not found\n\nraw_headers &lt;- url_html %&gt;%\n  html_nodes(\".thead-icon\") %&gt;%\n  html_attr('title')\n\ntidy_bottom_header &lt;- raw_headers[28:length(raw_headers)]\n# tidy_bottom_header[1:10]\n\nraw_middle_header &lt;- raw_headers[17:27]\n# raw_middle_header\n\ntidy_headers &lt;- c(\n  rep(raw_middle_header[1:7], each = 2),\n  \"animal_total\",\n  rep(raw_middle_header[8:length(raw_middle_header)], each = 2),\n  \"non_animal_total\",\n  \"country_total\")\n\n# tidy_headers\n\ncombined_colnames &lt;- paste(tidy_headers, tidy_bottom_header, sep = ';')\ncolnames(table_content) &lt;- c(\"Country\", combined_colnames)\n\nError: object 'table_content' not found\n\ntable_content &lt;- table_content %&gt;%\n  mutate_at(vars(2:26), as.numeric)\n\nError in eval(expr, envir, enclos): object 'table_content' not found\n\n\nThe code above reads the data in from the Wayback Machine‚Äôs archived version of the original webpage and gets it into tabular form.\nYour job is to complete the following tasks:\n\nDescribe the state of the data set, table_content.\n\nWhat are the variables in the data set?\n\nvar1\nvar2\n(add more as necessary)\n\nIs it in tidy form? What principles of tidy data does this violate?\nYour answer here\nWhat steps do you need to take to get it into tidy form?\n\n\n(add more steps as necessary)\n\n\nSketch out what the final (tidy) data set will look like. You can use markdown table syntax or a picture here, but if you use a picture, upload it to imgur and include the image link in this document USING PROPER MARKDOWN SYNTAX.\nWrite R or python code for each step in the process you identified in #1. Show what the data looks like at each step using head(). Each step should be in a different code chunk.\nFor each food type (you may have to remove total values), plot the relationship between Carbon output and Consumption (use facets to get separate plots for each type of food). What do you notice for each plot? If you want to reduce carbon emissions, what foods should you eat less of?\nLook at the plot above again. Do you have any concerns about the data? The data source?"
  },
  {
    "objectID": "homework/09-data-cleaning.html",
    "href": "homework/09-data-cleaning.html",
    "title": "Homework: Data Manipulation",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/09-data-cleaning.html#r-replicate-the-plot",
    "href": "homework/09-data-cleaning.html#r-replicate-the-plot",
    "title": "Homework: Data Manipulation",
    "section": "R: Replicate the plot",
    "text": "R: Replicate the plot\nYour first goal (in R) is to get to this graph by breaking down the problem (replicating the graph) into smaller steps that make sense and that you can accomplish piece-by-piece.\n\n\n\nTarget plot to replicate - you can also see a local file if you open plot0.png\n\n\n\nProblem Steps\nMake a list of steps that will be necessary to get the data you have into this form.\n\n\nProblem Code\nProvide code that sequentially works through your list of steps to produce the graph. You might put your steps as comments to remind yourself what you‚Äôre doing at each point in the code.\n\n# Code for step 1 goes here"
  },
  {
    "objectID": "homework/09-data-cleaning.html#python-replicate-a-different-plot",
    "href": "homework/09-data-cleaning.html#python-replicate-a-different-plot",
    "title": "Homework: Data Manipulation",
    "section": "Python: Replicate a (different) plot",
    "text": "Python: Replicate a (different) plot\n\n# Run this if you haven't installed plotnine already\nreticulate::py_install(\"plotnine\")\n\n\nimport pandas as pd\nfrom plotnine import *\n\ngames = pd.read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-03-16/games.csv')\n\n\n\n\nPlot to replicate - you can also open plot1.png to see a local file\n\n\nThis plot shows the 5 games with the most average users in March of 2020. It is ok if you can replicate this plot to the point where the legend doesn‚Äôt show up properly, as in this image:\n\n\n\nLegend not quite right - see plot2.png in the project folder\n\n\n\nProblem Steps\nMake a list of steps below that will be necessary to get the data you have into this form.\n\n\nProblem Code\nProvide code that sequentially works through your list of steps to produce the necessary table of games."
  },
  {
    "objectID": "homework/09-data-cleaning.html#r",
    "href": "homework/09-data-cleaning.html#r",
    "title": "Homework: Data Manipulation",
    "section": "R",
    "text": "R\n\nmonth.name is a vector containing month names that you can use to create a factor variable. Factor variables can be easily converted into numeric variables. This might help you get a numeric month, which might help you get to a fractional year. Alternately, you can use the match() function to get a numeric month by using match(dataframe$month, month.name).\ndplyr::filter() is a function that will subset a data frame based on a logical condition. It might be easier to use than logical indexing (though you can use either)\nTo get a line graph in ggplot2, use geom_line(). Using aes(color = varname) will color the lines by variable name.\nSome sample code to make a line graph in ggplot is provided below:\n\n\nlibrary(dplyr)\n# Get only january months so that there's one point a year\njan_data &lt;- filter(games, month == \"January\")\n\n# x axis is year, y axis is average players\n# group = gamename says draw one line for each game\nggplot(data = jan_data, \n       aes(x = year, y = avg, group = gamename)) + \n  geom_line()\n\n\n\n\n\n\n\n\nNote that you will need to modify this code to use the correct data frame (that you generate) as well as to e.g.¬†use color."
  },
  {
    "objectID": "homework/09-data-cleaning.html#python",
    "href": "homework/09-data-cleaning.html#python",
    "title": "Homework: Data Manipulation",
    "section": "Python",
    "text": "Python\n\nPandas will let you sort a data frame in decreasing order of variable x using sort_values('x', ascending = False)\nYou can select rows of a python data frame that match a list using .isin() demo\nUsing the .assign() function to create new variables will reduce the number of errors you run into. You may be able to get the correct answer without this tip, but if you run into a ‚Äòmodify on copy‚Äô or ‚Äòcopy on write‚Äô error, consider using .assign().\nSample code to make a line plot in plotnine is provided below:\n\n\n# Get only january months so that there's one point a year\njan_data = games.query('month == \"January\"')\n\n# x axis is year, y axis is average players\n# group = gamename says draw one line for each game\nggplot(jan_data, aes(x =\"year\", y = \"avg\", group = \"gamename\")) + geom_line()\n\n&lt;Figure Size: (640 x 480)&gt;\n\n\n\n\n\n\n\n\n\nNote that you will need to modify this code to use the correct data frame (that you generate) as well as to e.g.¬†use color."
  },
  {
    "objectID": "homework/07-github.html",
    "href": "homework/07-github.html",
    "title": "üëã The Basics of GitHub",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/07-github.html#course-overview-and-learning-outcomes",
    "href": "homework/07-github.html#course-overview-and-learning-outcomes",
    "title": "üëã The Basics of GitHub",
    "section": "ü§ì Course overview and learning outcomes",
    "text": "ü§ì Course overview and learning outcomes\nThe goal of this course is to give you a brief introduction to GitHub. We‚Äôll also provide you with materials for further learning and a few ideas to get you started on our platform. üöÄ"
  },
  {
    "objectID": "homework/07-github.html#git-and-github",
    "href": "homework/07-github.html#git-and-github",
    "title": "üëã The Basics of GitHub",
    "section": "Git and GitHub",
    "text": "Git and GitHub\nGit is a distributed Version Control System (VCS), which means it is a useful tool for easily tracking changes to your code, collaborating, and sharing. With Git you can track the changes you make to your project so you always have a record of what you‚Äôve worked on and can easily revert back to an older version if need be. It also makes working with others easier‚Äîgroups of people can work together on the same project and merge their changes into one final source!\nGitHub is a way to use the same power of Git all online with an easy-to-use interface. It‚Äôs used across the software world and beyond to collaborate and maintain the history of projects.\nGitHub is home to some of the most advanced technologies in the world. Whether you‚Äôre visualizing data or building a new game, there‚Äôs a whole community and set of tools on GitHub that can get you to the next step. This course starts with the basics of GitHub, but we‚Äôll dig into the rest later."
  },
  {
    "objectID": "homework/07-github.html#understanding-the-github-flow",
    "href": "homework/07-github.html#understanding-the-github-flow",
    "title": "üëã The Basics of GitHub",
    "section": "Understanding the GitHub flow",
    "text": "Understanding the GitHub flow\nThe GitHub flow is a lightweight workflow that allows you to experiment and collaborate on your projects easily, without the risk of losing your previous work.\n\nRepositories\nA repository is where your project work happens‚Äìthink of it as your project folder. It contains all of your project‚Äôs files and revision history. You can work within a repository alone or invite others to collaborate with you on those files.\n\n\nCloning\nWhen a repository is created with GitHub, it‚Äôs stored remotely in the ‚òÅÔ∏è. You can clone a repository to create a local copy on your computer and then use Git to sync the two. This makes it easier to fix issues, add or remove files, and push larger commits. You can also use the editing tool of your choice as opposed to the GitHub UI. Cloning a repository also pulls down all the repository data that GitHub has at that point in time, including all versions of every file and folder for the project! This can be helpful if you experiment with your project and then realize you liked a previous version more. To learn more about cloning, read ‚ÄúCloning a Repository‚Äù.\n\n\nCommitting and pushing\nCommitting and pushing are how you can add the changes you made on your local machine to the remote repository in GitHub. That way your instructor and/or teammates can see your latest work when you‚Äôre ready to share it. You can make a commit when you have made changes to your project that you want to ‚Äúcheckpoint.‚Äù You can also add a helpful commit message to remind yourself or your teammates what work you did (e.g.¬†‚ÄúAdded a README with information about our project‚Äù).\nOnce you have a commit or multiple commits that you‚Äôre ready to add to your repository, you can use the push command to add those changes to your remote repository. Committing and pushing may feel new at first, but we promise you‚Äôll get used to it üôÇ"
  },
  {
    "objectID": "homework/07-github.html#github-terms-to-know",
    "href": "homework/07-github.html#github-terms-to-know",
    "title": "üëã The Basics of GitHub",
    "section": "üíª GitHub terms to know",
    "text": "üíª GitHub terms to know\n\nRepositories\nWe mentioned repositories already, they are where your project work happens, but let‚Äôs talk a bit more about the details of them! As you work more on GitHub you will have many repositories which may feel confusing at first. Fortunately, your ‚ÄúGitHub dashboard‚Äù helps to easily navigate to your repositories and see useful information about them. Make sure you‚Äôre logged in to see it!\nRepositories also contain READMEs. You can add a README file to your repository to tell other people why your project is useful, what they can do with your project, and how they can use it. We are using this README to communicate how to learn Git and GitHub with you. üòÑ To learn more about repositories read ‚ÄúCreating, Cloning, and Archiving Repositories and ‚ÄúAbout README‚Äôs‚Äù.\n\n\nBranches\nYou can use branches on GitHub to isolate work that you do not want merged into your final project just yet. Branches allow you to develop features, fix bugs, or safely experiment with new ideas in a contained area of your repository. Typically, you might create a new branch from the default branch of your repository‚Äîmain. This makes a new working copy of your repository for you to experiment with. Once your new changes have been reviewed by a teammate, or you are satisfied with them, you can merge your changes into the default branch of your repository. To learn more about branching, read ‚ÄúAbout Branches‚Äù.\nNote: In this class, you will not be required to use branches.\n\n\nForks\nA fork is another way to copy a repository, but is usually used when you want to contribute to someone else‚Äôs project. Forking a repository allows you to freely experiment with changes without affecting the original project and is very popular when contributing to open source software projects! To learn more about forking, read ‚ÄúFork a repo‚Äù\nNote: In this class, you will not be required to use forks.\n\n\nPull requests\nWhen working with branches, you can use a pull request to tell others about the changes you want to make and ask for their feedback. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add more changes if need be. You can add specific people as reviewers of your pull request which shows you want their feedback on your changes! Once a pull request is ready-to-go, it can be merged into your main branch. To learn more about pull requests, read ‚ÄúAbout Pull Requests‚Äù.\nNote: In this course, you will not be required to use pull requests.\n\n\nIssues\nIssues are a way to track enhancements, tasks, or bugs for your work on GitHub. Issues are a great way to keep track of all the tasks you want to work on for your project and let others know what you plan to work on. You can also use issues to tell a favorite open source project about a bug you found or a feature you think would be great to add!\nFor larger projects, you can keep track of many issues on a project board. GitHub Projects help you organize and prioritize your work and you can read more about them in this ‚ÄúAbout Project boards document. You likely won‚Äôt need a project board for your assignments, but once you move on to even bigger projects, they‚Äôre a great way to organize your team‚Äôs work! You can also link together pull requests and issues to show that a fix is in progress and to automatically close the issue when someone merges the pull request. To learn more about issues and linking them to your pull requests, read ‚ÄúAbout Issues‚Äù.\n\n\nYour user profile\nYour profile page tells people the story of your work through the repositories you‚Äôre interested in, the contributions you‚Äôve made, and the conversations you‚Äôve had. You can also give the world a unique view into who you are with your profile README. You can use your profile to let future employers know all about you! To learn more about your user profile and adding and updating your profile README, read ‚ÄúManaging Your Profile README‚Äù.\n\n\nUsing markdown on GitHub\nYou might have noticed already, but you can add some fun styling to your issues, pull requests, and files. ‚ÄúMarkdown‚Äù is an easy way to style your issues, pull requests, and files with some simple syntax. This can be helpful to organize your information and make it easier for others to read. You can also drop in gifs and images to help convey your point! To learn more about using GitHub‚Äôs flavor of markdown, read ‚ÄúBasic Writing and Formatting Syntax‚Äù.\n\n\nEngaging with the GitHub community\nThe GitHub community is vast. There are many types of people who use GitHub in their day to day‚Äîstudents like you, professional developers, hobbyists working on open source projects, and explorers who are just jumping into the world of software development on their own. There are many ways you can interact with the larger GitHub community, but here are three places where you can start.\n\nStarring repositories\nIf you find a repository interesting or you want to keep track of it, star it! When you star a repository it‚Äôs also used as a signal to surface better recommendations on github.com/explore. If you‚Äôd like to get back to your starred repositories you can do so via your user profile. To learn more about starring repositories, read ‚ÄúSaving Repositories with Stars‚Äù.\n\n\nFollowing users\nYou can follow people on GitHub to receive notifications about their activity and discover projects in their communities. When you follow a user, their public GitHub activity will show up on your dashboard so you can see all the cool things they are working on. To learn more about following users, read ‚ÄúFollowing People‚Äù.\n\n\nBrowsing GitHub Explore\nGitHub Explore is a great place to do just that ‚Ä¶ explore :smile: You can find new projects, events, and developers to interact with.\nYou can check out the GitHub Explore website at github.com/explore. The more you intereact with GitHub the more tailored your Explore view will be."
  },
  {
    "objectID": "homework/07-github.html#next-steps",
    "href": "homework/07-github.html#next-steps",
    "title": "üëã The Basics of GitHub",
    "section": "üìù Next steps",
    "text": "üìù Next steps\n\nClone this repository to your local machine\nOn your local machine, create a new markdown file in this repository named ‚ÄòAbout_Me.md‚Äô. Provide a short biography/introduction for yourself and use markdown formatting\n\nMarkdown Basics provides an overview of different formatting options in markdown.\nYou must use at least the following formatting elements: header, subheader, bold or italic, bulleted list, and an image.\n\nCommit your changes to your new file locally and push them back to your github repository. Check on Github to make sure the new file appears.\nTo get full credit for your assignment, you will need to have worked with your git repository locally. I will be able to see if you have used the github editor to make your changes instead :)."
  },
  {
    "objectID": "homework/07-github.html#resources",
    "href": "homework/07-github.html#resources",
    "title": "üëã The Basics of GitHub",
    "section": "üìö Resources",
    "text": "üìö Resources\n\nA short video explaining what GitHub is\nGit and GitHub learning resources\nUnderstanding the GitHub flow\nHow to use GitHub branches\nInteractive Git training materials\nGitHub‚Äôs Learning Lab\nEducation community forum\nGitHub community forum"
  },
  {
    "objectID": "homework/07-github.html#optional-extra-steps",
    "href": "homework/07-github.html#optional-extra-steps",
    "title": "üëã The Basics of GitHub",
    "section": "Optional extra steps",
    "text": "Optional extra steps\n\nCreate your profile README. Let the world know a little bit more about you! What are you interested in learning? What are you working on? What‚Äôs your favorite hobby? Learn more about creating your profile README in the document, ‚ÄúManaging Your Profile README‚Äù.\nGo to your user dashboard and create a new repository. Experiment with the features within that repository to familiarize yourself with them.\nLet us know what you liked or didn‚Äôt like about the content of this course. What would you like to see more of? What would be interesting or helpful to your learning journey?"
  },
  {
    "objectID": "homework/05-vectors.html",
    "href": "homework/05-vectors.html",
    "title": "Homework 5: Vectors and Control Structures",
    "section": "",
    "text": "Download the starter qmd file here"
  },
  {
    "objectID": "homework/05-vectors.html#set-up",
    "href": "homework/05-vectors.html#set-up",
    "title": "Homework 5: Vectors and Control Structures",
    "section": "Set-Up",
    "text": "Set-Up\nRunning the following chunk will generate two files and save them to your current working directory.\n\nset.seed(24038243)\n# Generate a vector of data for the problem\nx &lt;- round(runif(100, 0, 1e6))\ny &lt;- round(runif(100, 0, 1e6))\n\n# write it to a file\nwriteLines(as.character(x), con = \"hw5data-r.txt\")\nwriteLines(as.character(y), con = \"hw5data-py.txt\")"
  },
  {
    "objectID": "homework/05-vectors.html#navigation",
    "href": "homework/05-vectors.html#navigation",
    "title": "Homework 5: Vectors and Control Structures",
    "section": "Navigation",
    "text": "Navigation\nThe following problem is inspired by the first problem in the 2021 Advent of Code challenge and as a result is Santa-themed.\nYou‚Äôre minding your own business on a ship at sea when the overboard alarm goes off! You rush to see if you can help. Apparently, one of the Elves tripped and accidentally sent the sleigh keys flying into the ocean! Before you know it, you‚Äôre inside a submarine the Elves keep ready for situations like this.\nAs the submarine drops below the surface of the ocean, it automatically performs a sonar sweep of the nearby sea floor. On a small screen, the sonar sweep report (your puzzle input) appears: each line is a measurement of the sea floor depth as the sweep looks further and further away from the submarine.\nFor example, suppose you had the following report:\n199\n200\n208\n210\n200\n207\n240\n269\n260\n263\nThis report indicates that, scanning outward from the submarine, the sonar sweep found depths of 199, 200, 208, 210, and so on.\nThe first order of business is to figure out how quickly the depth increases, just so you know what you‚Äôre dealing with - you never know if the keys will get carried into deeper water by an ocean current or a fish or something.\nTo do this, count the number of times a depth measurement increases from the previous measurement. (There is no measurement before the first measurement.) In the example above, the changes are as follows:\n199 (N/A - no previous measurement)\n200 (increased)\n208 (increased)\n210 (increased)\n200 (decreased)\n207 (increased)\n240 (increased)\n269 (increased)\n260 (decreased)\n263 (increased)\nIn this example, there are 7 measurements that are larger than the previous measurement.\nHow many measurements are larger than the previous measurement?\n\nPart 1 - Planning the solution\nDraw a program flow map to show how you plan to solve the problem. I used excalidraw.com to draw the maps in the book.\nExport your map to a png, upload it to an image hosting site like imgur, and include the link here. Make sure to link directly to the PNG (right click, get link to image).\n\n\n\nPart 2 - Writing the code\nYou have two files, hw5data-r.txt and hw5data-py.txt. I have provided you with code to read the data in from these files (if they aren‚Äôt in your current working directory, run the chunk in the Set-up section, which creates the files). Edit the code below the comment in the following chunks, storing your answer in the nx and nx2 variables. Do NOT edit the text below the code chunk ‚Äì it demonstrates how you can use values from a code chunk in normal text in your document. This is a very useful tool when writing reports and larger projects, as you can make your text depend on the data, producing customized documents that have the same structure for different data sets.\nPlease do NOT print your entire vector of sonar measurements out ‚Äì this takes a LOT to scroll through, and will make me very grumpy when I grade your assignment.\n\nR\n\nx &lt;- readLines(\"hw5data-r.txt\")\n\n## Solve the problem below this comment\n\n\nnx &lt;- NA # Your answer should be stored in the nx variable to make the line below this chunk work\n\nThere are NA measurements larger than the previous measurement.\n\n\nPython\n\nimport numpy as np\nx = np.loadtxt('hw5data-py.txt')\n\n## Solve the problem below this comment\n\n\nnx2 = 0 # your answer should be stored in the nx variable to make the line below this chunk work\n\nThere are 0 measurements larger than the previous measurement."
  },
  {
    "objectID": "homework/04-cipher.html",
    "href": "homework/04-cipher.html",
    "title": "Homework 4: Cipher",
    "section": "",
    "text": "Download the starter qmd file here\nThis assignment is modified from the decodeR exercises by Kelly Bodwin and Allison Theobold.\nOnce you finish this assignment in R, think about how you might decode the message in python. For +5 extra credit, write python code that decodes the message, following the outline of the R code you‚Äôve already written.\nIn this assignment, you will be creating and manipulating vectors, lists, and data frames to uncover a top secret message.\nSome advice:"
  },
  {
    "objectID": "homework/04-cipher.html#part-one-setup",
    "href": "homework/04-cipher.html#part-one-setup",
    "title": "Homework 4: Cipher",
    "section": "Part One: Setup",
    "text": "Part One: Setup\nEach of the following R chunks will cause an error and/or do the desired task incorrectly.\nFind the mistake, and correct it to complete the intended action.\nFor each error, write 1-2 sentences to reflect on what the mistake was and how you found it and fixed it.\n\nCreate vectors containing the upper case letters, lower case letters, and some punctuation marks.\n\n\nlower_case &lt;- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")\n\nupper_case &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\" \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\")\n\npunctuation &lt;- c(\".\", \",\", \"!\", \"?\", \"'\", \"\"\", \"(\", \")\", \" \", \"-\", \";\", \":\")\n\nError: &lt;text&gt;:3:56: unexpected string constant\n2: \n3: upper_case &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\" \"I\"\n                                                          ^\n\n\n\nMake one long vector containing all the symbols.\n\n\nmy_symbols &lt;- cbind(lower_case, upper_case, punctuation)\n\nError in eval(expr, envir, enclos): object 'lower_case' not found\n\n\n\nTurn the my_symbols vector into a data frame, with the variable name ‚ÄúSymbol‚Äù\n\n\nmy_symbols &lt;- dataframe(my_symbols)\n\nError in dataframe(my_symbols): could not find function \"dataframe\"\n\nnames(my_symbols) = Symbol\n\nError in eval(expr, envir, enclos): object 'Symbol' not found\n\n\n\nFind the total number of symbols we have in our data frame.\n\n\nlen &lt;- length(my_symbols)\n\nError in eval(expr, envir, enclos): object 'my_symbols' not found\n\n\n\nCreate a new variable in your dataframe that assigns a number to each symbol.\n\n\nmy_symbols%Num &lt;- 1:len\n\nError: &lt;text&gt;:1:11: unexpected input\n1: my_symbols%Num &lt;- 1:len\n              ^"
  },
  {
    "objectID": "homework/04-cipher.html#part-two-decoding-the-secret-message.",
    "href": "homework/04-cipher.html#part-two-decoding-the-secret-message.",
    "title": "Homework 4: Cipher",
    "section": "Part Two: Decoding the secret message.",
    "text": "Part Two: Decoding the secret message.\nThis chunk will load up the encoded secret message as a vector:\n\ntop_secret &lt;- read.csv(\"https://raw.githubusercontent.com/srvanderplas/unl-stat151/main/homework/04_Secret_Code\", header = FALSE)$V1\n\nBy altering this top secret set of numbers, you will be able to create a message. Write your own code to complete the steps below.\n\nAdd 14 to every number.\nMultiply every number by 18, then subtract 257.\nExponentiate every number. (That is, do e1.)\nSquare every number.\n\nCheckpoint: Headquarters has informed you that at this stage of decoding, there should be 352 numbers in the secret message that are below 17.\n\nTurn your vector of numbers into a matrix with 5 columns.\nSeparately from your top secret numbers, create a vector of all the even numbers between 1 and 382. Name it ‚Äúevens‚Äù. That is, ‚Äúevens‚Äù should contain 2, 4, 6, 8 ‚Ä¶, 382.\nSubtract the ‚Äúevens‚Äù vector from the first column of your secret message matrix.\nSubtract 100 from all numbers in the 18-24th rows of the 3rd column.\nMultiply all numbers in the 4th and 5th column by 2.\nTurn your matrix back into a vector.\n\nCheckpoint: Headquarters has informed you that at this stage of decoding, all numbers in indices 500 and beyond are below 100.\n\nTake the square root of all numbers in indices 38 to 465.\nRound all numbers to the nearest whole number.\nReplace all instances of the number 39 with 20.\n\nCheckpoint: Headquarters has informed you that your final message should have 344 even numbers."
  },
  {
    "objectID": "homework/04-cipher.html#part-3-the-secret-message",
    "href": "homework/04-cipher.html#part-3-the-secret-message",
    "title": "Homework 4: Cipher",
    "section": "Part 3: The secret message!",
    "text": "Part 3: The secret message!\nUse your final vector of numbers as indices for my_symbols to discover the final message!\nGoogle the first line of this message, if you do not recognize it, to see what it is.\nWrite 3-4 sentences about what you learned from this investigation. What problems did you encounter, and how did you solve them?"
  },
  {
    "objectID": "homework/04-cipher.html#footnotes",
    "href": "homework/04-cipher.html#footnotes",
    "title": "Homework 4: Cipher",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nnumber‚Ü©Ô∏é"
  },
  {
    "objectID": "homework/02-finding-your-way.html",
    "href": "homework/02-finding-your-way.html",
    "title": "Homework 2: Finding Your Way in R and Python",
    "section": "",
    "text": "Download the starter qmd file here"
  },
  {
    "objectID": "homework/02-finding-your-way.html#madlibs",
    "href": "homework/02-finding-your-way.html#madlibs",
    "title": "Homework 2: Finding Your Way in R and Python",
    "section": "MadLibs",
    "text": "MadLibs\n\nRunning a Python Script at the command line\nRun the script madlibs.py using the terminal to run the script (e.g.¬†type python3 madlibs.py in the terminal). Do what it asks of you. Copy the text after the initial command and paste it between the markings below. (These define a generic, no-language markdown code chunk).\n# Paste your output here!\nCan you run this same script in RStudio using the Source Script button? If you can, please describe any differences you note compared to using the terminal. If you cannot, tell me what happens.\n\n\nReserved Words\nDoes the madlibs.py script use any reserved words? How can you tell?\n\n\nCode Highlighting\nAre there any other words that stand out when you open up madlibs.py in RStudio? What do they do? How do they appear?"
  },
  {
    "objectID": "homework/02-finding-your-way.html#thinking-critically",
    "href": "homework/02-finding-your-way.html#thinking-critically",
    "title": "Homework 2: Finding Your Way in R and Python",
    "section": "Thinking Critically",
    "text": "Thinking Critically\nLook at the quarto file from Homework 1. What features does RStudio provide that would help you identify code? Comments? YAML markup (the header at the top of the file, where the document title/author/date/output format are specified)?\nHow can you differentiate R code from python code in a quarto file?\nHow do links show up in the text editor?\n\nLearn More\n\nSkim the quarto documentation on code cell options. Which 3 options do you think will be the most useful?\nWhen would you consider using #| eval: false at the start of a chunk?\nWhen might you use #| echo: false?\nWhat about #| output: false?"
  },
  {
    "objectID": "homework/01-scripts-notebooks.html",
    "href": "homework/01-scripts-notebooks.html",
    "title": "Homework 1: Scripts and Notebooks",
    "section": "",
    "text": "Download the starter qmd file here"
  },
  {
    "objectID": "homework/01-scripts-notebooks.html#what-is-the-difference-between-a-script-and-a-notebook",
    "href": "homework/01-scripts-notebooks.html#what-is-the-difference-between-a-script-and-a-notebook",
    "title": "Homework 1: Scripts and Notebooks",
    "section": "What is the difference between a script and a notebook?",
    "text": "What is the difference between a script and a notebook?\nReplace this paragraph with 2-3 sentences describing your understanding of the difference between a script and a notebook. Your answer should be applicable to R or python (so if you discuss python notebooks, you should also discuss the equivalent in R). Use markdown formatting as described in this cheat-sheet.\nYou may want to provide a table or itemized list, and you should use code formatting to indicate file extensions and programming languages.\nYou can comment this prompt out, so that it does not show up in your document (but is still present in the qmd file) by highlighting the text and hitting Ctrl/Cmd + Shift + C."
  },
  {
    "objectID": "homework/01-scripts-notebooks.html#playing-with-code-in-notebooks",
    "href": "homework/01-scripts-notebooks.html#playing-with-code-in-notebooks",
    "title": "Homework 1: Scripts and Notebooks",
    "section": "Playing with Code in Notebooks",
    "text": "Playing with Code in Notebooks\nThe code chunk below defines a logarithmic spiral. Using this reference, modify the code so that it now plots Fermat‚Äôs spiral. Use \\(a = 1\\).\n\n# Define the angle of the spiral (polar coords)\n# go around two full times (2*pi = one revolution)\ntheta &lt;- seq(0, 4*pi, .01) \n# Define the distance from the origin of the spiral\n# Needs to have the same length as theta\nr &lt;- theta\n\n# Now define x and y in cartesian coordinates\nx &lt;- r * cos(theta)\ny &lt;- r * sin(theta)\n\nplot(x, y, type = \"l\")\n\n\n\n\n\n\n\n\nCan you do the same thing in Python? It may help to know that in Python, to raise something to a power, you use ** instead of ^.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Define the angle of the spiral (polar coords)\n# go around two full times (2*pi = one revolution)\ntheta = np.arange(0, 4 * np.pi, 0.01)\n# Define the distance from the origin of the spiral\n# Needs to have the same length as theta \nr = theta\n\n# Now define x and y in cartesian coordinates\nx = r * np.cos(theta)\ny = r * np.sin(theta)\n\n# Define the axes\nfig, ax = plt.subplots()\n# Plot the line\nax.plot(x, y)\nplt.show()"
  },
  {
    "objectID": "homework/03-data-types.html",
    "href": "homework/03-data-types.html",
    "title": "Homework 3: Basic Data Types",
    "section": "",
    "text": "Download the starter qmd file here"
  },
  {
    "objectID": "homework/03-data-types.html#pythagorean-theorem-in-r",
    "href": "homework/03-data-types.html#pythagorean-theorem-in-r",
    "title": "Homework 3: Basic Data Types",
    "section": "Pythagorean Theorem in R",
    "text": "Pythagorean Theorem in R\n\\[a^2 + b^2 = c^2\\]\nUse the chunk below to define variables \\(a\\), \\(b\\), and \\(c\\), where you set \\(a\\) and \\(b\\) and \\(c\\) is determined mathematically. You may need to find the square root function in R to make this work.\n\n# Your pythagorean theorem code goes here"
  },
  {
    "objectID": "homework/03-data-types.html#quadratic-formula-in-python",
    "href": "homework/03-data-types.html#quadratic-formula-in-python",
    "title": "Homework 3: Basic Data Types",
    "section": "Quadratic Formula in Python",
    "text": "Quadratic Formula in Python\n\\[x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\\]\nUse the chunk below to define variables \\(a\\), \\(b\\), and \\(c\\), and then define \\(x1\\) and \\(x2\\), the possible values for \\(x\\).\n\n# Your quadratic formula code goes here"
  },
  {
    "objectID": "homework/03-data-types.html#debugging-practice",
    "href": "homework/03-data-types.html#debugging-practice",
    "title": "Homework 3: Basic Data Types",
    "section": "Debugging practice",
    "text": "Debugging practice\nLook at the data frame below, which contains 3 columns: Name, Salary, and Hire.Year. You‚Äôve read in this data from the data file online and ideally, you want to plot Hire.Year on the x-axis and Salary on the y-axis (code to do this is provided).\nUnfortunately, the data isn‚Äôt reading in properly. Identify the problem, propose a solution, and try to implement your solution using functions on the R reference card.\nSome things you may want to consider:\n\ngsub\nYou can access columns in a data frame using $: df$col1 will get you col1 of the df object. (We will talk about data frames more next week, but for now, just try to use them)\nYou can access items in a vector using []: x[1] will get you the first item in x\n\nNote: You should be able to identify the problem given what you know about R from this chapter. You may not be able to implement a solution without some additional research, so if you don‚Äôt get that far that‚Äôs ok.\n\n# This line reads in a tab-separated data file with a header naming the columns\nsalary &lt;- read.table(\"https://raw.githubusercontent.com/srvanderplas/unl-stat151/main/homework/03-data.tsv\",\n                     sep = \"\\t\", header = T)\n\n# This code plots labels for each individual at location (x, y)\nlibrary(ggplot2)\nggplot(salary, aes(x = Hire.Year, y = Salary, label = Name)) +\n  geom_label()\n\n\n\n\n\n\n\n# This displays the salary object\nsalary\n\n            Name     Salary Hire.Year\n1  Michael Scott $67,872.00      1995\n2 Dwight Schrute      54000      2001\n3     Pam Beesly      26309      2003\n4    Jim Halpert      59083      1998\n\n\n\nThe problem with the data is:\nHere is how I solved the problem:\n\n# Your implementation code goes here"
  },
  {
    "objectID": "homework/05-tips-for-success.html",
    "href": "homework/05-tips-for-success.html",
    "title": "Tips: Homework 5",
    "section": "",
    "text": "Check your compiled file before you submit to make sure it looks the way you want it.\nIf you want to be really sure it works, copy your qmd file to a different folder and compile that‚Ä¶ for now, that‚Äôs the best way to check that it will work on my machine."
  },
  {
    "objectID": "homework/05-tips-for-success.html#compile-your-file-first",
    "href": "homework/05-tips-for-success.html#compile-your-file-first",
    "title": "Tips: Homework 5",
    "section": "",
    "text": "Check your compiled file before you submit to make sure it looks the way you want it.\nIf you want to be really sure it works, copy your qmd file to a different folder and compile that‚Ä¶ for now, that‚Äôs the best way to check that it will work on my machine."
  },
  {
    "objectID": "homework/05-tips-for-success.html#images",
    "href": "homework/05-tips-for-success.html#images",
    "title": "Tips: Homework 5",
    "section": "2 Images",
    "text": "2 Images\nImage links must be to the image url, not to the imgur page url\n\n\n\ncaption text goes here\n\n\nCode for this image:\n![caption text goes here](https://i.imgur.com/PKushbR.png){width=50%}\nYou can get this url by right-clicking on the image on the Imgur page and then selecting ‚ÄúCopy image address‚Äù:\n\nOther things that don‚Äôt work:\n\nIncluding (local) file paths directly (user names changed to protect the innocent):\n\n\\C:\\Users\\person\\Documents\\Flow chart HW5.png\nC:\\Users\\person\\Downloads\\Stat 151\\Excalidraw.png\n\nIncluding (local) file paths in correct image syntax\nExplanation: this works on your machine, but won‚Äôt work on mine because I don‚Äôt have your file on my machine. You could zip the PNG file and the qmd file up together and submit that, I guess, but it‚Äôs easier to follow the directions about imgur (in my opinion).\n\n![](program-flow-map.png)"
  },
  {
    "objectID": "homework/05-tips-for-success.html#yaml-metadata",
    "href": "homework/05-tips-for-success.html#yaml-metadata",
    "title": "Tips: Homework 5",
    "section": "3 YAML metadata",
    "text": "3 YAML metadata\nYAML metadata is the stuff between --- at the top of your document.\n\nYou should have only one set of metadata in your document.\n\nIn this example, you should delete the first set of YAML metadata and only include the second set that has the proper information for the assignment.\n---\ntitle: \"person HW 5\"\nformat: html\neditor: visual\n---\n\n---\ntitle: \"Homework 5: Vectors and Control Structures\"\nauthor: \"person\"\ndate: \"Due: March 3, 2023\"\noutput: \n  html_document:\n    self_contained: yes\n---\n\n\nYAML metadata indentation matters\n\nThis works:\noutput: \n  html_document:\n    self_contained: yes\nThis doesn‚Äôt:\noutput: html_document\n  self_contained: yes\nThis works:\n---\ntitle: \"Homework 5: Vectors and Control Structures\"\ndate: \"Due: March 3, 2023\"\noutput: \n  html_document:\n    self_contained: yes\n---\nThis doesn‚Äôt:\n---\n  title: \"Homework 5: Vectors and Control Structures\"\ndate: \"Due: March 3, 2023\"\noutput: \n  html_document:\n  self_contained: yes\n---"
  },
  {
    "objectID": "homework/05-tips-for-success.html#quarto-default-template",
    "href": "homework/05-tips-for-success.html#quarto-default-template",
    "title": "Tips: Homework 5",
    "section": "4 Quarto default template",
    "text": "4 Quarto default template\nIt‚Äôs totally fine to delete the default quarto information that looks like this from the bottom/top of your file.\nIt‚Äôs also totally fine to delete the YAML metadata that comes with that quarto default template. I usually say ‚ÄúCreate blank document‚Äù or switch to source mode and Ctrl-A (select all) before Ctrl-V (paste) to remove everything that RStudio gives you by default.\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see &lt;https://quarto.org&gt;.\n\n## Running Code\n\nWhen you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n```{r}\n1 + 1\n```\n\nYou can add options to executable code like this\n\n```{r}\n#| echo: false\n2 * 2\n```\n\nThe `echo: false` option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "homework/05-tips-for-success.html#print-only-necessary-output",
    "href": "homework/05-tips-for-success.html#print-only-necessary-output",
    "title": "Tips: Homework 5",
    "section": "5 Print only necessary output",
    "text": "5 Print only necessary output\nI would prefer if you didn‚Äôt print out the values of a vector in the code chunks when you submit your file. Comment those out - it‚Äôs useful to have them for debugging, but you don‚Äôt need them for presentation purposes.\nWhat to do:\n\nx &lt;- as.numeric(x)\n# x # Commented out, so you can uncomment to debug if necessary\n\nWhat not to do:\n\nx &lt;- as.numeric(x)\nx\n\n  [1] 325698 766364 362012 166247 897999 294171 916664 884662 278403 940574\n [11] 106891 381401 849972 897001 226519 828195  91265 753154 588095 457528\n [21] 277275 809052 113874 671162 686489 896904 747724   7053 950898 707745\n [31] 168003 523324 896071 810445 641980 457608 941793  14326 706029 537414\n [41]  55988 910090 506347 526471 962873 317735 762427 638727 425519 388537\n [51] 280629 940575 755803 934680 911933 857272 707581 358178 789662 394281\n [61]   7500 178213 362466 967969 252530 128349 953298 500442 760581 367530\n [71] 871698 127322 190632 637714 365932 776579 969538 916833 254271 692061\n [81] 253268 136396 295048 643919 979193 716806 945620 576969 602211 402003\n [91] 536309 626646 882011  89558 114729 187246 866224 493441 529045 677284"
  },
  {
    "objectID": "homework/06-fizzbuzz.html",
    "href": "homework/06-fizzbuzz.html",
    "title": "Homework 6: FizzBuzz",
    "section": "",
    "text": "Download the starter qmd file here"
  },
  {
    "objectID": "homework/06-fizzbuzz.html#program-flow-map-pre-work",
    "href": "homework/06-fizzbuzz.html#program-flow-map-pre-work",
    "title": "Homework 6: FizzBuzz",
    "section": "Program Flow Map ‚Äì Pre-Work",
    "text": "Program Flow Map ‚Äì Pre-Work\nCreate a program flow map (on paper, or using an online tool of your choice, such as Excalidraw) showing how FizzBuzz should be evaluated for a given integer x. You do not need to worry about the for loop in this program flow map. Upload your program flow map image to imgur.com and provide an image link here using markdown image syntax. You will need to link directly to the image (with image file extension) - right click on your uploaded image and choose ‚Äòcopy image address‚Äô to get the proper link.\n\n\n\nSubstitute picture of a cat\n\n\nA few questions to consider:\n\nCan you think of another way to solve FizzBuzz using a different logical structure?\nWhat do you need to know how to do in R/python for each solution?\n\nDo you need to know how to concatenate strings?\nConvert something from an integer to a string?\nOutput stuff to the command line?\n\n\nThinking through these requirements can help you decide which solution is the simplest and/or best.\nList out the requirements of the solution in your program flow map here:"
  },
  {
    "objectID": "homework/06-fizzbuzz.html#fizzbuzz-for-one",
    "href": "homework/06-fizzbuzz.html#fizzbuzz-for-one",
    "title": "Homework 6: FizzBuzz",
    "section": "Fizzbuzz for one",
    "text": "Fizzbuzz for one\nIn the chunk below, write code which will solve this problem for a single number, x. You should be able to change only the value of x and get the correct answer.\n(Do this in R or python - just pick a language for this assignment. If you choose python, just change the chunk types below.)\n\nx = 20\n\n# Your code goes here"
  },
  {
    "objectID": "homework/06-fizzbuzz.html#fizzbuzz-in-loops",
    "href": "homework/06-fizzbuzz.html#fizzbuzz-in-loops",
    "title": "Homework 6: FizzBuzz",
    "section": "Fizzbuzz in loops",
    "text": "Fizzbuzz in loops\nIn the chunk below, write code which will solve this problem using a for loop that goes from 1 to 30. Store the result of each of the 30 numbers in a character vector instead of printing it out to the command line.\n\n# R code goes here"
  },
  {
    "objectID": "homework/06-fizzbuzz.html#fizzbuzz-in-a-function",
    "href": "homework/06-fizzbuzz.html#fizzbuzz-in-a-function",
    "title": "Homework 6: FizzBuzz",
    "section": "Fizzbuzz in a function",
    "text": "Fizzbuzz in a function\nWrite a FizzBuzz function named fizzbuzz1. Your function should take a single number and return (not print out) a single string evaluating the number that was passed in. Use input validation to ensure that you are given a number, and provide a useful error if you are not given a number as the function argument.\n\n# Your code goes here\n\nThis code will test your fizzbuzz function. Please make sure it runs as you expect it to run before you submit this file to Canvas!\n\nfizzbuzz1(3)\n## Error in fizzbuzz1(3): could not find function \"fizzbuzz1\"\nfizzbuzz1(5)\n## Error in fizzbuzz1(5): could not find function \"fizzbuzz1\"\nfizzbuzz1(7)\n## Error in fizzbuzz1(7): could not find function \"fizzbuzz1\"\nfizzbuzz1(15)\n## Error in fizzbuzz1(15): could not find function \"fizzbuzz1\"\nfizzbuzz1(0)\n## Error in fizzbuzz1(0): could not find function \"fizzbuzz1\"\nfizzbuzz1(\"this should fail\")\n## Error in fizzbuzz1(\"this should fail\"): could not find function \"fizzbuzz1\""
  },
  {
    "objectID": "homework/06-fizzbuzz.html#vectorized-fizzbuzz",
    "href": "homework/06-fizzbuzz.html#vectorized-fizzbuzz",
    "title": "Homework 6: FizzBuzz",
    "section": "Vectorized FizzBuzz",
    "text": "Vectorized FizzBuzz\nWrite a FizzBuzz function named fizzbuzz that can handle a vector of numbers and will return (not print out) a vector of character/string values. Check to ensure the input vector is numeric.\nHint: You might use a loop and call your function from the previous part on each value in the vector.\nThis code will test your fizzbuzz function. Please make sure it runs as you expect it to run before you submit this file to Canvas!\n\nfizzbuzz(c(0, 3, 5, 7, 11, 15))\n## Error in fizzbuzz(c(0, 3, 5, 7, 11, 15)): could not find function \"fizzbuzz\"\n\nfizzbuzz(month.name) # this should fail\n## Error in fizzbuzz(month.name): could not find function \"fizzbuzz\""
  },
  {
    "objectID": "homework/08-graphics.html",
    "href": "homework/08-graphics.html",
    "title": "Homework: Graphics with Banknotes",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/08-graphics.html#swiss-banknotes",
    "href": "homework/08-graphics.html#swiss-banknotes",
    "title": "Homework: Graphics with Banknotes",
    "section": "Swiss Banknotes",
    "text": "Swiss Banknotes\nThe R package mclust contains a data set called banknote, consisting of (physical) measurements on 200 Swiss bank notes, 100 of which are genuine, while the other half is counterfeit. Load this data set (you might have to install the package) using the code below.\n\n# install.packages(\"mclust\")\nlibrary(mclust) # if this throws an error of the form 'there is no package called mclust', uncomment the line above, run it once, then comment the line out again and run the code chunk again.\n## Package 'mclust' version 6.1.1\n## Type 'citation(\"mclust\")' for citing this R package in publications.\ndata(banknote)\nbanknote$Status &lt;- factor(banknote$Status)\n\n\nbanknote = r.banknote # Copy data from R\n\nFor each of the three figures you create below, write a summary paragraph describing the structure of the plot:\n\nWhat type of plot is it?\nWhich variables are mapped to x, to y, and to the (fill) color?\nWhat is the main message of the plot: what is your main finding, i.e.¬†what do you want viewers to learn from the plot?\nAre there any anomalies or outliers?\n\n\nUse ggplot2 or plotnine to draw a barchart of Status. Map Status to the fill color of the barchart. This will be a relatively boring chart (but that is ok)\nUse ggplot2 or plotnine to draw a histogram of one of the variables in the dataset that shows a distinction between genuine and counterfeit banknotes. Use fill color to show this difference.\nUse ggplot2 or plotnine to draw a scatterplot of two (continuous) measurements, color by Status. Try to find a pair of measurements that allow you to separate perfectly between genuine and counterfeit banknotes."
  },
  {
    "objectID": "homework/10-strings.html",
    "href": "homework/10-strings.html",
    "title": "Homework: Working with strings",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\nComplete the following tasks in R or Python.\nThese exercises are stolen from kbodwin‚Äôs decodeR repository."
  },
  {
    "objectID": "homework/10-strings.html#setup",
    "href": "homework/10-strings.html#setup",
    "title": "Homework: Working with strings",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî ggplot2   3.5.1     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.3     ‚úî tidyr     1.3.1\n‚úî purrr     1.0.4     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(lubridate)\nmessage &lt;- read.csv(\"./message.txt\", stringsAsFactors = FALSE)$Word"
  },
  {
    "objectID": "homework/10-strings.html#warm-up-exercises",
    "href": "homework/10-strings.html#warm-up-exercises",
    "title": "Homework: Working with strings",
    "section": "Warm-up exercises",
    "text": "Warm-up exercises\n\nHow many characters are in the scrambled message?\nHow many of these characters are white space?\nHow many words are in the scrambled message?\nShow all the punctuation marks in the scrambled message.\nPrint out, in all capitals, the longest word in the scrambled message.\nPrint out every piece of a word that starts with the letter ‚Äúm‚Äù and ends with the letter ‚Äúz‚Äù in the scrambled message."
  },
  {
    "objectID": "homework/10-strings.html#decode-a-message",
    "href": "homework/10-strings.html#decode-a-message",
    "title": "Homework: Working with strings",
    "section": "Decode a message",
    "text": "Decode a message\nNow complete the following steps to decode the message:\n\nRemove any spaces before or after each word.\nNo word should be longer than 16 characters. Drop all extra characters off the end of each word.\nAny time you see the word ‚Äúugh‚Äù, with any number of h‚Äôs, followed by a punctuation mark, delete this.\nReplace all instances of exactly 2 a‚Äôs with exactly 2 e‚Äôs.\nReplace all z‚Äôs with t‚Äôs.\nEvery word that ends in b, change that to a y. Hint: punctuation!\nEvery word that starts with k, change that to a v. Hint: capitalization!\nUse str_c(str) or ' '.join(map(str, 1)) to recombine all your words into a message.\nFind the movie this quote is from."
  },
  {
    "objectID": "homework/12-graphics2.html",
    "href": "homework/12-graphics2.html",
    "title": "Homework: Awesomely Bad Graphics",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/12-graphics2.html#take-everything-you-know-and-use-it-for-evil",
    "href": "homework/12-graphics2.html#take-everything-you-know-and-use-it-for-evil",
    "title": "Homework: Awesomely Bad Graphics",
    "section": "Take everything you know, and use it for evil",
    "text": "Take everything you know, and use it for evil\nThe textbook spent lots of time showing you how to create different types of graphics, but I spent a lot less time showing you all of the different ways you could customize graphics ggplot2 or plotnine. In this problem, I want you to create the ugliest version of the following graphs you can, and then explain why, exactly, you made the decisions you did, and which principles of good graphics you‚Äôve intentionally violated.\nUgliness is subjective, so the goal here is for you to explore the different ways you can customize the finer details of graphics. Make sure your finished masterpiece has appropriate axis labels and a title (after all, even ugly plots need to be correctly labeled!). You are free to add additional variables and layers, modify the aesthetics used, and leverage other packages. I have provided this code as a starting point, not as a way to limit your creativity.\nI have provided some basic code to get you started. We‚Äôll use the palmerpenguins package, which has fantastic documentation with really awesome artwork.\n\nif (!\"palmerpenguins\" %in% installed.packages()) {\n  remotes::install_github(\"allisonhorst/palmerpenguins\")\n}\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\nhead(penguins)\n\n# A tibble: 6 √ó 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ‚Ñπ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\nggplot(penguins, aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\npenguins = r.penguins\n\n\nUseful References\n\nCustomizing ggplot2 graphics\nA group-created slideshow of awful graphics\nAn example of customizing plots in plotnine"
  },
  {
    "objectID": "slides/02-scripts-notebooks.html#talking-to-r-and-python",
    "href": "slides/02-scripts-notebooks.html#talking-to-r-and-python",
    "title": "Scripts and Notebooks",
    "section": "Talking to R and Python",
    "text": "Talking to R and Python\nPlaces to put code:\n\nCommand Line (Terminal)\nScripts\nNotebooks"
  },
  {
    "objectID": "slides/02-scripts-notebooks.html#talking-to-r-and-python-1",
    "href": "slides/02-scripts-notebooks.html#talking-to-r-and-python-1",
    "title": "Scripts and Notebooks",
    "section": "Talking to R and Python",
    "text": "Talking to R and Python\nHow you run the code:\n\nType/execute one command at a time\nRun a whole set of code"
  },
  {
    "objectID": "slides/02-scripts-notebooks.html#talking-to-r-and-python-2",
    "href": "slides/02-scripts-notebooks.html#talking-to-r-and-python-2",
    "title": "Scripts and Notebooks",
    "section": "Talking to R and Python",
    "text": "Talking to R and Python\nWhere the results appear:\n\nTerminal\nOutput file\nFinished document"
  },
  {
    "objectID": "slides/02-scripts-notebooks.html#key-signals",
    "href": "slides/02-scripts-notebooks.html#key-signals",
    "title": "Scripts and Notebooks",
    "section": "Key signals",
    "text": "Key signals\n\nWhat does the prompt look like? &gt;, $, &gt;&gt;&gt;, %\n\nIndication of what language the computer expects\n\nHow do you run the code?\n\npython3 &lt;file.py&gt;, Ctrl/Cmd + Enter, hit Enter, ‚Ä¶\n\nWhat folder is the computer looking in? (working directory)\nWhat program are you operating in? (RStudio, Cmd.exe, Terminal, etc.)"
  },
  {
    "objectID": "slides/04-building-blocks.html#husker-power-survey",
    "href": "slides/04-building-blocks.html#husker-power-survey",
    "title": "Building Blocks",
    "section": "Husker POWER survey",
    "text": "Husker POWER survey\n\nLink sent out via Canvas/Email\n\nThe Husker Student POWER survey is currently open to first year and new transfer students.\nThe survey consists of 12 yes/no statements about academic, social, financial, and emotional well-being topics.\nStaff and instructors with expertise use the survey responses to provide support and resources to students whose responses raise concerns.\nTake a minute and complete the survey if you haven‚Äôt already!"
  },
  {
    "objectID": "slides/04-building-blocks.html#variables",
    "href": "slides/04-building-blocks.html#variables",
    "title": "Building Blocks",
    "section": "Variables",
    "text": "Variables\n\nDeclare: set aside a space in memory for a variable\nAssign: Set the value of a variable\n\nIn modern languages (R, Python, etc.) these two steps are usually done simultaneously\nx &lt;- 3 (R)\ny = \"hello world\" (Python)"
  },
  {
    "objectID": "slides/04-building-blocks.html#naming-things",
    "href": "slides/04-building-blocks.html#naming-things",
    "title": "Building Blocks",
    "section": "Naming Things",
    "text": "Naming Things\n\nVariable names can‚Äôt\n\nstart with a number\nstart with a symbol (_ is ok in Python)\ninclude . (Python)\nbe a reserved word\n\n\n\n_x &lt;- 3\n\nError: &lt;text&gt;:1:2: unexpected symbol\n1: _x\n     ^\n\n\n\n3x &lt;- 3\n\nError: &lt;text&gt;:1:2: unexpected symbol\n1: 3x\n     ^\n\n\n\nif &lt;- 3\n\nError: &lt;text&gt;:1:4: unexpected assignment\n1: if &lt;-\n       ^"
  },
  {
    "objectID": "slides/04-building-blocks.html#naming-things-1",
    "href": "slides/04-building-blocks.html#naming-things-1",
    "title": "Building Blocks",
    "section": "Naming Things",
    "text": "Naming Things\n\nVariable names can‚Äôt\n\nstart with a number\nstart with a symbol (_ is ok in Python)\ninclude . (Python)\nbe a reserved word\n\n\n\nx.y = 3\n\nError: NameError: name 'x' is not defined\n\n\n\n$y = 3\n\ninvalid syntax (&lt;string&gt;, line 1)\n\n\n\n3y = 3\n\ninvalid decimal literal (&lt;string&gt;, line 1)\n\n\n\nif = 3\n\ninvalid syntax (&lt;string&gt;, line 1)"
  },
  {
    "objectID": "slides/04-building-blocks.html#naming-things-2",
    "href": "slides/04-building-blocks.html#naming-things-2",
    "title": "Building Blocks",
    "section": "Naming Things",
    "text": "Naming Things\nWhen you create a variable:\n\nChoose descriptive names\n\nMatch the equation/formula (if math)\nMay want to include units length_mm\n\nAvoid single character names where possible\nc in particular is a bad name in R!\nBalance length and clarity/information"
  },
  {
    "objectID": "slides/04-building-blocks.html#basic-variable-types",
    "href": "slides/04-building-blocks.html#basic-variable-types",
    "title": "Building Blocks",
    "section": "Basic Variable Types",
    "text": "Basic Variable Types\n\nInteger - 2, 6, 109243\n\nR calls these ‚Äòinteger‚Äô, Python calls them ‚Äòint‚Äô\n\nFloating point - 3.1415, 2.7, 9.0\n\nR calls these ‚Äòdouble‚Äô, Python calls them ‚Äòfloat‚Äô 1\n\nString - ‚ÄúABCDE‚Äù, ‚Äú¬†‚Äù , ‚ÄúEddie is a Jack Russell Terrorist‚Äù\n\nR calls these ‚Äòcharacter‚Äô, Python calls them ‚Äòstr‚Äô\n\nBoolean - True, False\n\nR calls these ‚Äòlogical‚Äô, Python calls them ‚Äòbool‚Äô\n\n\nThe difference between double and float is technical and involves how many decimal places of precision are allocated in memory."
  },
  {
    "objectID": "slides/04-building-blocks.html#testing-types",
    "href": "slides/04-building-blocks.html#testing-types",
    "title": "Building Blocks",
    "section": "Testing Types",
    "text": "Testing Types\nUse a function to test if the type of y is xxx\nR: is.xxx(y)\nPython: isInstance(y, xxx)\n\nis.logical(3.14)\n\n[1] FALSE\n\nis.character(3.14)\n\n[1] FALSE\n\nis.character(\"3.14\")\n\n[1] TRUE\n\nis.integer(3.14)\n\n[1] FALSE\n\nis.numeric(\"pi\")\n\n[1] FALSE\n\nis.numeric(pi)\n\n[1] TRUE"
  },
  {
    "objectID": "slides/04-building-blocks.html#testing-types-1",
    "href": "slides/04-building-blocks.html#testing-types-1",
    "title": "Building Blocks",
    "section": "Testing Types",
    "text": "Testing Types\nUse a function to test if the type of y is xxx\nR: is.xxx(y)\nPython: isinstance(y, xxx)\n\npi = 3.14159\nisinstance(3.14, bool)\n\nFalse\n\nisinstance(3.14, str)\n\nFalse\n\nisinstance(\"3.14\", str)\n\nTrue\n\nisinstance(3.14, int)\n\nFalse\n\nisinstance(\"pi\", float)\n\nFalse\n\nisinstance(pi, float)\n\nTrue"
  },
  {
    "objectID": "slides/04-building-blocks.html#implicit-type-conversions",
    "href": "slides/04-building-blocks.html#implicit-type-conversions",
    "title": "Building Blocks",
    "section": "Implicit Type Conversions",
    "text": "Implicit Type Conversions\nR and Python will both try to work with types that don‚Äôt match‚Ä¶ to a point\n\n\n\nv1 &lt;- 1L + 2.0\nv1\n\n[1] 3\n\nis.integer(v1)\n\n[1] FALSE\n\nis.double(v1)\n\n[1] TRUE\n\n\n\n\nv2 &lt;- TRUE + 3L\nv2\n\n[1] 4\n\nis.logical(v2)\n\n[1] FALSE\n\nis.integer(v2)\n\n[1] TRUE\n\nis.double(v2)\n\n[1] FALSE\n\n\n\n\nv3 &lt;- \"3\" + 4\n\nError in \"3\" + 4: non-numeric argument to binary operator\n\n\n\n\nv4 &lt;- \"3\" + \"4\"\n\nError in \"3\" + \"4\": non-numeric argument to binary operator\n\n\n\nVariables are converted to the least-complicated/least memory intensive compatible type."
  },
  {
    "objectID": "slides/04-building-blocks.html#implicit-type-conversions-1",
    "href": "slides/04-building-blocks.html#implicit-type-conversions-1",
    "title": "Building Blocks",
    "section": "Implicit Type Conversions",
    "text": "Implicit Type Conversions\nR and Python will both try to work with types that don‚Äôt match‚Ä¶ to a point\n\n\n\nv1 = 1 + 2.0\nv1\n\n3.0\n\nisinstance(v1, int)\n\nFalse\n\nisinstance(v1, float)\n\nTrue\n\n\n\n\nv2 = True + 3\nv2\n\n4\n\nisinstance(v2, bool)\n\nFalse\n\nisinstance(v2, int)\n\nTrue\n\nisinstance(v2, float)\n\nFalse\n\n\n\n\nv3 = \"3\" + 4\n\nError: TypeError: can only concatenate str (not \"int\") to str\n\n\n\n\nv4 = \"3\" + \"4\"\nv4\n\n'34'\n\n\n\nPython will concatenate (smush together) strings using +\n\n\nVariables are converted to the least-complicated/least memory intensive compatible type."
  },
  {
    "objectID": "slides/04-building-blocks.html#explicit-type-conversions",
    "href": "slides/04-building-blocks.html#explicit-type-conversions",
    "title": "Building Blocks",
    "section": "Explicit Type Conversions",
    "text": "Explicit Type Conversions\nYou can force things to be converted from one type to the other as well.\n\n\nPython\n\nint(\"3\")\n\n3\n\nint(3.14)\n\n3\n\nint(3.84)\n\n3\n\nbool(3.0)\n\nTrue\n\n\n\nR\n\nas.integer(\"3\")\n\n[1] 3\n\nas.integer(3.14)\n\n[1] 3\n\nas.integer(3.84)\n\n[1] 3\n\nas.logical(3.0)\n\n[1] TRUE"
  },
  {
    "objectID": "slides/04-building-blocks.html#functions",
    "href": "slides/04-building-blocks.html#functions",
    "title": "Building Blocks",
    "section": "Functions",
    "text": "Functions\n\nA function is a sequence of commands that performs a task\nFunctions (sometimes) take arguments and (sometimes) return values\nWe call a function by running code with the function name and values:\n\n\nFunction anatomy"
  },
  {
    "objectID": "slides/04-building-blocks.html#functions-1",
    "href": "slides/04-building-blocks.html#functions-1",
    "title": "Building Blocks",
    "section": "Functions",
    "text": "Functions\n\nA function is a sequence of commands that performs a task\nFunctions (sometimes) take arguments and (sometimes) return values\nWe call a function by running code with the function name and any necessary arguments\n\n\nFunction arguments"
  },
  {
    "objectID": "slides/04-building-blocks.html#software-libraries",
    "href": "slides/04-building-blocks.html#software-libraries",
    "title": "Building Blocks",
    "section": "Software Libraries",
    "text": "Software Libraries\n\nWe often group commonly used, related functions into packages (R) or modules (Python)\nYou install a package with install.packages(\"pkgname\") (R) or pip install pkgname (Python)\nPackages/modules must be loaded before they can be used.\nlibrary(pkgname) (R)\nimport pkgname (Python)\nIn Python, you access the functions in a package by pkgname.funcname, even after you‚Äôve imported it\nIn R, after the library is loaded, you access a function using funcname"
  },
  {
    "objectID": "slides/04-building-blocks.html#python-package-functions",
    "href": "slides/04-building-blocks.html#python-package-functions",
    "title": "Building Blocks",
    "section": "Python Package Functions",
    "text": "Python Package Functions\npkgname.funcname can make for wordy code\nimport pkgname as pn allows you to use pn.funcname instead\nThis creates an alias for the package\nfrom pkgname import func1 func2 allows you to use func1() and func2() directly, without the package name\nThis directly imports ONLY the functions you need\n\nIt is considered bad practice to use from pkgname import *, which exposes all functions in the package directly.\n\nThis is bad because multiple packages could have the same function names inside\nThis very quickly leads to bugs"
  },
  {
    "objectID": "slides/06-if-statements.html#controlling-your-program-execution",
    "href": "slides/06-if-statements.html#controlling-your-program-execution",
    "title": "Control Structures",
    "section": "Controlling your program execution",
    "text": "Controlling your program execution\nTwo primary methods:\n\nif/else statements\nloops"
  },
  {
    "objectID": "slides/06-if-statements.html#if-statements",
    "href": "slides/06-if-statements.html#if-statements",
    "title": "Control Structures",
    "section": "If Statements",
    "text": "If Statements\n\n\nR\n\nset.seed(1432309)\nx &lt;- sample(1:10, 1)\ny &lt;- NA # NA is a good placeholder value\n\nif(x &gt; 3) {\n  if (x &gt; 5) {\n    y &lt;- \"above 5\"\n  } else {\n    y &lt;- \"between 3 and 5\"\n  }\n} else {\n  y &lt;- \"below 3\"\n}\n\nprint(paste(\"according to y, x is \", y))\n\n[1] \"according to y, x is  between 3 and 5\"\n\nprint(paste(\"x =\", x))\n\n[1] \"x = 5\"\n\n\n\nPython\n\nimport random\nimport numpy as np\n\nrandom.seed(1432309)\nx = random.randint(1, 11)\ny = np.nan # NA is a good placeholder value\n\nif x &gt; 3:\n  if x &gt; 5:\n    y = \"above 5\"\n  else :\n    y = \"between 3 and 5\"\nelse :\n  y = \"below 3\"\n\n\"according to y, x is \" + y\n\n'according to y, x is above 5'\n\n\"x = \" + str(x)\n\n'x = 6'"
  },
  {
    "objectID": "slides/06-if-statements.html#flow-charts",
    "href": "slides/06-if-statements.html#flow-charts",
    "title": "Control Structures",
    "section": "Flow Charts",
    "text": "Flow Charts\nProgram Flow Diagrams or control diagrams are used to describe the logical steps followed by a program"
  },
  {
    "objectID": "slides/06-if-statements.html#loops",
    "href": "slides/06-if-statements.html#loops",
    "title": "Control Structures",
    "section": "Loops",
    "text": "Loops\nLoops do the same set of steps for multiple values (usually either in a sequence or in a vector/column).\n\n\nR\n\nset.seed(1432309)\nx &lt;- sample(1:10, 5) # Sample 5 values, this time\ny &lt;- rep(NA, length(x)) # NA is a good placeholder value\n\nfor(i in 1:length(x)) { # First val in x, second, and so on...\n  if(x[i] &gt; 3) {\n  if (x[i] &gt; 5) {\n    y[i] &lt;- \"above 5\"\n  } else {\n    y[i] &lt;- \"between 3 and 5\"\n  }\n} else {\n  y[i] &lt;- \"below 3\"\n}\n}\n\n\nprint(paste0(\"according to y, x is \", y, \" (x = \", x, \")\"))\n\n[1] \"according to y, x is between 3 and 5 (x = 5)\"\n[2] \"according to y, x is below 3 (x = 2)\"        \n[3] \"according to y, x is above 5 (x = 9)\"        \n[4] \"according to y, x is above 5 (x = 6)\"        \n[5] \"according to y, x is above 5 (x = 7)\"        \n\n\n\nPython\n\nimport random\nimport numpy as np\n\nrandom.seed(1432309)\nx = random.choices(range(1, 11), k = 5)\ny = np.full(shape=5, fill_value=\"*\"*15) # NA is a good placeholder value\n\nfor i, xval in enumerate(x):\n  if xval &gt; 3:\n    if xval &gt; 5:\n      y[i] = \"above 5\"\n    else :\n      y[i] = \"between 3 and 5\"\n  else :\n    y[i] = \"below 3\"\n\n\n# This is a \"list comprehension\" - an abbreviated for loop used to work with vectors\n[\"according to y, x is \" + y[i] + \" (x=\" + str(x[i]) + \")\" for i, xval in enumerate(x)]\n\n['according to y, x is above 5 (x=10)', 'according to y, x is above 5 (x=9)', 'according to y, x is above 5 (x=6)', 'according to y, x is below 3 (x=3)', 'according to y, x is below 3 (x=1)']"
  },
  {
    "objectID": "weeks/week-02.html",
    "href": "weeks/week-02.html",
    "title": "Week 2: Scripts and Notebooks",
    "section": "",
    "text": "RStudio‚Äôs Interface\nScripts and Notebooks\n\n\n\n\nWeek 2 Reading Quiz\n\n\n\n\n\n\nDo the examples in the textbook chapter on Scripts and Notebooks.\n\n\n\n\n\nSlides\n\n\n\n\n\nHomework 1",
    "crumbs": [
      "Weekly materials",
      "Week 2 - Scripts & Notebooks"
    ]
  },
  {
    "objectID": "weeks/week-02.html#reading",
    "href": "weeks/week-02.html#reading",
    "title": "Week 2: Scripts and Notebooks",
    "section": "",
    "text": "RStudio‚Äôs Interface\nScripts and Notebooks\n\n\n\n\nWeek 2 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 2 - Scripts & Notebooks"
    ]
  },
  {
    "objectID": "weeks/week-02.html#prepare-for-class",
    "href": "weeks/week-02.html#prepare-for-class",
    "title": "Week 2: Scripts and Notebooks",
    "section": "",
    "text": "Do the examples in the textbook chapter on Scripts and Notebooks.",
    "crumbs": [
      "Weekly materials",
      "Week 2 - Scripts & Notebooks"
    ]
  },
  {
    "objectID": "weeks/week-02.html#wednesday",
    "href": "weeks/week-02.html#wednesday",
    "title": "Week 2: Scripts and Notebooks",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 2 - Scripts & Notebooks"
    ]
  },
  {
    "objectID": "weeks/week-02.html#practice-your-skills",
    "href": "weeks/week-02.html#practice-your-skills",
    "title": "Week 2: Scripts and Notebooks",
    "section": "",
    "text": "Homework 1",
    "crumbs": [
      "Weekly materials",
      "Week 2 - Scripts & Notebooks"
    ]
  },
  {
    "objectID": "weeks/week-04.html",
    "href": "weeks/week-04.html",
    "title": "Week 4: Building Blocks",
    "section": "",
    "text": "Variables and Basic Data Types\nUsing Functions and Libraries\n\n\n\n\nWeek 4 Reading Quiz\n\n\n\n\n\n\nDownload and read through the homework assignment\n\n\n\n\n\nData Types, Variables, and Common Mistakes\nDebugging strategies\n\n\n\n\n\nHomework 3",
    "crumbs": [
      "Weekly materials",
      "Week 4 - Building Blocks"
    ]
  },
  {
    "objectID": "weeks/week-04.html#reading",
    "href": "weeks/week-04.html#reading",
    "title": "Week 4: Building Blocks",
    "section": "",
    "text": "Variables and Basic Data Types\nUsing Functions and Libraries\n\n\n\n\nWeek 4 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 4 - Building Blocks"
    ]
  },
  {
    "objectID": "weeks/week-04.html#prepare-for-class",
    "href": "weeks/week-04.html#prepare-for-class",
    "title": "Week 4: Building Blocks",
    "section": "",
    "text": "Download and read through the homework assignment",
    "crumbs": [
      "Weekly materials",
      "Week 4 - Building Blocks"
    ]
  },
  {
    "objectID": "weeks/week-04.html#wednesday",
    "href": "weeks/week-04.html#wednesday",
    "title": "Week 4: Building Blocks",
    "section": "",
    "text": "Data Types, Variables, and Common Mistakes\nDebugging strategies",
    "crumbs": [
      "Weekly materials",
      "Week 4 - Building Blocks"
    ]
  },
  {
    "objectID": "weeks/week-04.html#practice-your-skills",
    "href": "weeks/week-04.html#practice-your-skills",
    "title": "Week 4: Building Blocks",
    "section": "",
    "text": "Homework 3",
    "crumbs": [
      "Weekly materials",
      "Week 4 - Building Blocks"
    ]
  },
  {
    "objectID": "weeks/week-06.html",
    "href": "weeks/week-06.html",
    "title": "Week 6: Control Structures",
    "section": "",
    "text": "Control Structures\n\n\n\n\nWeek 6 Reading Quiz\n\n\n\n\n\n\nRead Homework 5 tips for success and make sure you understand local vs.¬†global file paths\n\n\n\n\n\nHomework 5",
    "crumbs": [
      "Weekly materials",
      "Week 6 - Control Structures"
    ]
  },
  {
    "objectID": "weeks/week-06.html#reading",
    "href": "weeks/week-06.html#reading",
    "title": "Week 6: Control Structures",
    "section": "",
    "text": "Control Structures\n\n\n\n\nWeek 6 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 6 - Control Structures"
    ]
  },
  {
    "objectID": "weeks/week-06.html#prepare-for-class",
    "href": "weeks/week-06.html#prepare-for-class",
    "title": "Week 6: Control Structures",
    "section": "",
    "text": "Read Homework 5 tips for success and make sure you understand local vs.¬†global file paths",
    "crumbs": [
      "Weekly materials",
      "Week 6 - Control Structures"
    ]
  },
  {
    "objectID": "weeks/week-06.html#practice-your-skills",
    "href": "weeks/week-06.html#practice-your-skills",
    "title": "Week 6: Control Structures",
    "section": "",
    "text": "Homework 5",
    "crumbs": [
      "Weekly materials",
      "Week 6 - Control Structures"
    ]
  },
  {
    "objectID": "weeks/week-08.html",
    "href": "weeks/week-08.html",
    "title": "Week 8: Midterm",
    "section": "",
    "text": "Study for your midterm exam!\n\n\n\n\nEnjoy your spring break!\n\n\n\nMidterm Exam (In class)",
    "crumbs": [
      "Weekly materials",
      "Week 8 - Midterm"
    ]
  },
  {
    "objectID": "weeks/week-08.html#prepare-for-class",
    "href": "weeks/week-08.html#prepare-for-class",
    "title": "Week 8: Midterm",
    "section": "",
    "text": "Study for your midterm exam!",
    "crumbs": [
      "Weekly materials",
      "Week 8 - Midterm"
    ]
  },
  {
    "objectID": "weeks/week-08.html#practice-your-skills",
    "href": "weeks/week-08.html#practice-your-skills",
    "title": "Week 8: Midterm",
    "section": "",
    "text": "Enjoy your spring break!",
    "crumbs": [
      "Weekly materials",
      "Week 8 - Midterm"
    ]
  },
  {
    "objectID": "weeks/week-08.html#exam",
    "href": "weeks/week-08.html#exam",
    "title": "Week 8: Midterm",
    "section": "",
    "text": "Midterm Exam (In class)",
    "crumbs": [
      "Weekly materials",
      "Week 8 - Midterm"
    ]
  },
  {
    "objectID": "weeks/week-10.html",
    "href": "weeks/week-10.html",
    "title": "Week 10: Graphics",
    "section": "",
    "text": "Basic Data Visualization\nData Visualization - Read Intro, Why, and Thinking Critically. You can skip or skim the other sections.\n\n\n\n\nWeek 10 Reading Quiz\n\n\n\n\n\n\nGraphics\n\n\n\n\n\nHomework 8 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 10 - Data Visualization"
    ]
  },
  {
    "objectID": "weeks/week-10.html#reading",
    "href": "weeks/week-10.html#reading",
    "title": "Week 10: Graphics",
    "section": "",
    "text": "Basic Data Visualization\nData Visualization - Read Intro, Why, and Thinking Critically. You can skip or skim the other sections.\n\n\n\n\nWeek 10 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 10 - Data Visualization"
    ]
  },
  {
    "objectID": "weeks/week-10.html#wednesday",
    "href": "weeks/week-10.html#wednesday",
    "title": "Week 10: Graphics",
    "section": "",
    "text": "Graphics",
    "crumbs": [
      "Weekly materials",
      "Week 10 - Data Visualization"
    ]
  },
  {
    "objectID": "weeks/week-10.html#practice-your-skills",
    "href": "weeks/week-10.html#practice-your-skills",
    "title": "Week 10: Graphics",
    "section": "",
    "text": "Homework 8 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 10 - Data Visualization"
    ]
  },
  {
    "objectID": "weeks/week-12.html",
    "href": "weeks/week-12.html",
    "title": "Week 12: Strings",
    "section": "",
    "text": "Working with Strings - Read only sections Basic Operations, Converting to Numbers, Separating and Joining Columns.\n\n\n\n\nWeek 12 Reading Quiz\n\n\n\n\n\n\nTry out each of the different ways to manipulate strings and clean up data\n\n\n\n\n\nWorking with Strings\n\n\n\n\n\nHomework 10 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 12 - Strings"
    ]
  },
  {
    "objectID": "weeks/week-12.html#reading",
    "href": "weeks/week-12.html#reading",
    "title": "Week 12: Strings",
    "section": "",
    "text": "Working with Strings - Read only sections Basic Operations, Converting to Numbers, Separating and Joining Columns.\n\n\n\n\nWeek 12 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 12 - Strings"
    ]
  },
  {
    "objectID": "weeks/week-12.html#prepare-for-class",
    "href": "weeks/week-12.html#prepare-for-class",
    "title": "Week 12: Strings",
    "section": "",
    "text": "Try out each of the different ways to manipulate strings and clean up data",
    "crumbs": [
      "Weekly materials",
      "Week 12 - Strings"
    ]
  },
  {
    "objectID": "weeks/week-12.html#wednesday",
    "href": "weeks/week-12.html#wednesday",
    "title": "Week 12: Strings",
    "section": "",
    "text": "Working with Strings",
    "crumbs": [
      "Weekly materials",
      "Week 12 - Strings"
    ]
  },
  {
    "objectID": "weeks/week-12.html#practice-your-skills",
    "href": "weeks/week-12.html#practice-your-skills",
    "title": "Week 12: Strings",
    "section": "",
    "text": "Homework 10 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 12 - Strings"
    ]
  },
  {
    "objectID": "weeks/week-14.html",
    "href": "weeks/week-14.html",
    "title": "Week 14: Good Charts",
    "section": "",
    "text": "Creating Good Charts\n\n\n\n\nWeek 14 Reading Quiz\n\n\n\n\n\n\nFind an example of a terrible chart in the media\n\n\n\n\n\nBad Chart day!\n\n\n\n\n\nHomework 12 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 14 - Creating Good Charts"
    ]
  },
  {
    "objectID": "weeks/week-14.html#reading",
    "href": "weeks/week-14.html#reading",
    "title": "Week 14: Good Charts",
    "section": "",
    "text": "Creating Good Charts\n\n\n\n\nWeek 14 Reading Quiz",
    "crumbs": [
      "Weekly materials",
      "Week 14 - Creating Good Charts"
    ]
  },
  {
    "objectID": "weeks/week-14.html#prepare-for-class",
    "href": "weeks/week-14.html#prepare-for-class",
    "title": "Week 14: Good Charts",
    "section": "",
    "text": "Find an example of a terrible chart in the media",
    "crumbs": [
      "Weekly materials",
      "Week 14 - Creating Good Charts"
    ]
  },
  {
    "objectID": "weeks/week-14.html#wednesday",
    "href": "weeks/week-14.html#wednesday",
    "title": "Week 14: Good Charts",
    "section": "",
    "text": "Bad Chart day!",
    "crumbs": [
      "Weekly materials",
      "Week 14 - Creating Good Charts"
    ]
  },
  {
    "objectID": "weeks/week-14.html#practice-your-skills",
    "href": "weeks/week-14.html#practice-your-skills",
    "title": "Week 14: Good Charts",
    "section": "",
    "text": "Homework 12 (Submitted via Github classroom)",
    "crumbs": [
      "Weekly materials",
      "Week 14 - Creating Good Charts"
    ]
  },
  {
    "objectID": "weeks/week-16.html",
    "href": "weeks/week-16.html",
    "title": "Week 16: Finals",
    "section": "",
    "text": "Final Exam (May 15, 1-3 PM, regular classroom)",
    "crumbs": [
      "Weekly materials",
      "Finals"
    ]
  },
  {
    "objectID": "weeks/week-16.html#exam",
    "href": "weeks/week-16.html#exam",
    "title": "Week 16: Finals",
    "section": "",
    "text": "Final Exam (May 15, 1-3 PM, regular classroom)",
    "crumbs": [
      "Weekly materials",
      "Finals"
    ]
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Introduction to programming for statistical analysis. Covers basic programming concepts necessary for statistics, good computing practice, and use of built-in functions to complete basic statistical analyses.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#assessmentgrading",
    "href": "syllabus.html#assessmentgrading",
    "title": "Syllabus",
    "section": "Assessment/Grading",
    "text": "Assessment/Grading\n\n\n\nAssignments\nWeight\n\n\n\n\nReading Quizzes\n10%\n\n\nAttendance & Participation\n10%\n\n\nWeekly Homeworks\n40%\n\n\nMidterm Exam\n20%\n\n\nFinal Exam\n20%\n\n\n\nLower bounds for grade cutoffs are shown in the following table. I will not ‚Äúround up‚Äù grades at the end of the semester.\n\n\n\nLetter grade\nX +\nX\nX -\n\n\n\n\nA\n97.0\n94.0\n90.0\n\n\nB\n87.0\n84.0\n80.0\n\n\nC\n77.0\n74.0\n70.0\n\n\nD\n67.0\n64.0\n61.0\n\n\nF\n&lt;61.0\n\n\n\n\n\nInterpretation of this table: A grade of 84.3 will receive a B. A grade of 77.6 will receive a C+. A grade of 73.9 will receive a C-. Anything below a 61 will receive an F.\n\nReading Quizzes\nYou will have weekly reading assignments which introduce the weekly focus area and provide different perspectives on the material. Some of these perspectives will be covered in class and used in homework assignments, but some will not be used right away. It is still important for you to read about them and file that information away for a time when it is useful.\nIn order to motivate the importance of doing the weekly reading before class, you will be given a weekly reading quiz on Canvas which covers the requisite material. These quizzes will be due before the first class of the week (so, at 1 PM on Wednesday).\nNo late quizzes will be accepted, and quizzes will lock and become inaccessible automatically at the start of class. It is to your advantage to do the reading well before class so that you do not miss out on credit for the quizzes.\n\n\nAttendance & Participation\nAll students are expected to attend and fully participate in class. Participation grades will be determined based on a combination of attendance and participation. Consistent, repeated failure to attend class or actively participate in the course will affect the participation portion of your grade.\nOne absence is allowed without any reduction in participation score - no excuse is necessary!\n\nIllness\nIf you are feeling ill, please do not come to class. Instead, review the material and work on the homework assignment, and then schedule an appointment with me to meet virtually. In the appointment reason field on Calendly, indicate that this appointment is to substitute for your in-class participation on the date you missed.\nIf you need to miss more than 1-2 classes for illness, I reserve the right to require documentation from Disability Services or a medical provider in order to continue using this substitute for attendance grades.\n\n\nInclement Weather\nIf in-person classes are canceled, you will be notified of the instructional continuity plan for this class by Canvas Announcement. In most circumstances where there is power in the Lincoln area, we will hold class via Zoom if the university cancels class. You will be held to the same participation standards on Zoom as you are in person, and participation and attendance will be graded accordingly, with some allowance for disruption at the individual level where circumstances warrant.\n\n\n\nExams\nTwo exams will be given during the course of the semester. Exams will require that you write code to solve problems utilizing the course material.\n\nExam Make-up policies\nYou are expected to take exams at the scheduled times.\nIf this is impossible due to extreme circumstances (illness, death in the family, previously scheduled activities vital to academic program), please notify me and provide appropriate documentation.\n\nNo accommodations for missed exams will be given if I am not notified at least 24h prior to the exam date.\n\nIf you miss the midterm due to extreme circumstances, I reserve the right to replace the weight of the midterm with the final exam, rather than offering you a make-up exam.\nFinal exam times are published at the beginning of the semester. The final exam for this course is scheduled at May 15, 2025 01:00 PM. I will not schedule a make-up exam unless required to by university policy (e.g.¬†you have 3+ exams on the same day) or if there are extreme circumstances (severe illness, sudden death in the immediate family, etc.). I work extremely hard to get exams graded quickly so that everyone can get final grades; make-up exams delay this process for everyone.\n\n\n\nHomework\nApproximately 12-15 homework assignments will be made over the course of the semester. You will have one week to work on each assignment. The only way to learn statistics is to practice working problems, and homework is therefore an essential part of the course. Homework must be submitted in the file format specified, and should run or compile on my machine with no changes.\n\nLate Policy\nLate homework will be accepted only under extenuating circumstances, and only if you have contacted me prior to the assignment due date and received permission to hand the assignment in late. I reserve the right not to grade (or to assign a 0 to) any assignments received after the assignment due date.\nYou may submit an assignment that was not submitted in time as a resubmission, assuming it meets the conditions outlined in the next section.\n\n\nHomework Resubmission Policy\nLearning how to program is a process that is ongoing. I want you to not be afraid to make mistakes. As a result, I allow you to re-submit homework over the course of the semester in order to make corrections and respond to my initial feedback.\nNote: The resubmission policy does NOT apply to quizzes, exams, or projects.\nThis policy is subject to the following constraints:\n\nYou should resubmit assignments as soon as possible.\nYou may not resubmit an assignment for which solutions have been posted.\nEach assignment should be resubmitted only once.\nResubmissions are due no later than 2 weeks after the initial due date. In addition,\n\nResubmissions from weeks 1-7 must be submitted by Monday of week 8 of classes\nResubmissions from weeks 9-14 must be submitted by Monday of week 15 of classes\n\nResubmitted assignments will be graded at my convenience.\n\nI spend the extra time grading resubmissions because it reinforces your learning; this policy is not designed to improve your grade in this class.\nI reserve the right to adjust the resubmission policy over the course of the semester to ensure that it is meeting the objective of reinforcing your learning.\nI reserve the right to limit or penalize resubmissions if it becomes clear that the current policy does not promote learning of the material and/or support the course objectives.\nIn general, this policy means that I will typically not post assignment solutions, though you are welcome to visit office hours to ask questions about an assignment. ### General Grading Policies\n\n\nAssignment Evaluation Criteria\nIn every assignment, discussion, and written component of this class, you are expected to demonstrate that you are intellectually engaging with the material. I will evaluate you based on this engagement, which means that technically correct but low effort answers which do not demonstrate engagement or understanding will receive no credit.\nWhen you answer questions in this class, your goal is to show that you either understand the material or are actively engaging with it. If you did not achieve this goal, then your answer is incomplete, regardless of whether or not it is technically correct. This is not to encourage you to add unnecessary complexity to your answer - simple, elegant solutions are always preferable to unwieldy, complex solutions that accomplish the same task.\nWhile this is not an English class, grammar and spelling are important, as is your ability to communicate technical information in writing; both of these criteria will be used in addition to assignment-specific rubrics to evaluate your work.\n\n\nAssignment Oral Exams\nI reserve the right to fully or partially replace any written assignment grade with a grade based on an oral discussion of your submitted solutions. If you cannot explain how your solution works, why it is correct, and the logic behind how you got to your solution, then you will not receive credit.\nProcess:\n\nI will contact you and ask you to schedule an appointment with me to discuss .\nThis email request does NOT indicate that you are suspected of an academic integrity violation. There are many reasons I request an oral exam, and academic integrity issues are not as common as issues such as suspecting you misunderstood the question or approach.\nThis discussion may take place on zoom or in person, at my discretion.\nYou must schedule an appointment within 24 hours; the appointment time must be within 3 business days of the original email.\nThis ensures that oral exams don‚Äôt unduly delay results being returned to the whole class.\nI reserve the right to record the meeting to use in academic integrity proceedings.\n\nExplanation With the proliferation of AI tools such as Chat-GPT, as well as the old-fashioned ‚Äúfind solutions online and copy them without understanding how they work‚Äù, assessing your understanding of programming concepts can be difficult. This assessment is what you are paying tuition for - I need to be able to both assess your understanding and provide you with feedback about your learning progress. This is best accomplished interactively, with a back-and-forth oral discussion.\nThis policy is designed to accomplish several objectives:\n\nAllows for alternate assessment methods in cases of e.g.¬†test anxiety\nGain additional insight into how you got to a solution and why\nExplore potential misunderstandings of question phrasing\nObtain a more nuanced understanding of your grasp of specific programming concepts\n\n\n\nAI Policy\nChat GPT can be a useful tool, but this course‚Äôs objectives are meant to assess your ability to program in R and Python, not your ability to use AI systems. Fundamentally, you need to understand concepts and develop some syntactic fluency to program effectively; generative AI solutions may hamper both of these goals if you rely on them too much.\nIt is fine to use AI to explain how some code works.\nIt is not fine to ask AI for the solution to your homework assignment.\nUltimately, if you can‚Äôt explain how you got to your solution in a logical manner, you will not receive credit.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#expectations",
    "href": "syllabus.html#expectations",
    "title": "Syllabus",
    "section": "Expectations",
    "text": "Expectations\nYou can expect me to:\n\nreply to emails within 48 hours during the week (72 hours on weekends)\nbe available in class to assist with assignments\nbe available by appointment for additional help or discussion\n\nI expect you to:\n\nRead and attempt to understand the module material and watch any videos before coming to class\nEngage with the material and your classmates during class\nSeek help when you do not understand something\nCommunicate promptly if you anticipate that you will have trouble meeting deadlines or participating in a portion of the course.\nDo your own troubleshooting before contacting me for help (and mention things you‚Äôve already tried when you do ask for help!)\nBe respectful and considerate of everyone in the class\n\n\nMake Mistakes!\nProgramming is the process of making a series of silly or stupid mistakes, and then slowly fixing each mistake (while adding a few more). The only way to know how to fix these mistakes (and avoid them in the future) is to make them. (Sometimes, you have to make the same mistake a few dozen times before you can avoid it in the future).\nAt some point during the class, you will find that you‚Äôve spent 30 minutes staring at an error caused by a typo, a space, a parenthesis in the wrong place. You may ask for help debugging this weird error, only to have someone immediately point out the problem‚Ä¶ it is always easier to see these things in someone else‚Äôs code. This is part of programming, it is normal, and you shouldn‚Äôt feel embarrassed or apologize (unless you put no effort into troubleshooting the problem before you asked for help).\nIf you manage to produce an error I haven‚Äôt seen before, then congratulations! üëè You have achieved something special, and that achievement should be celebrated. üéâ Each new and bizarre error is an opportunity to learn a bit more about the programming language, the operating system, or the interaction between the two.\nProgramming is frustrating. It‚Äôs ok to take a break, walk around, or even lightly threaten your computer. The flip side is that solving those incredibly frustrating problems can be really fun. I expect you to experience both the highs and the lows of programming this semester.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "Stat 151: Introduction to Statistical Computing",
    "section": "",
    "text": "Course Description\nIntroduction to programming for statistical analysis. Covers basic programming concepts necessary for statistics, good computing practice, and use of built-in functions to complete basic statistical analyses.\n\n\nCourse Objectives\nAt the end of this course, students will\n\nBe comfortable using R and/or python for statistical analysis\nWrite basic programs using logic including for loops and control structures\nImplement basic data analyses in R or python\nDescribe the sequence of steps necessary to solve a simple problem\nBe familiar with good computing practices, such as version control and documentation",
    "crumbs": [
      "Course information",
      "Description"
    ]
  }
]