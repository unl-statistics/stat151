[
  {
    "objectID": "slides/07-functions.html#why-functions",
    "href": "slides/07-functions.html#why-functions",
    "title": "Functions … Putting it all together",
    "section": "Why functions?",
    "text": "Why functions?\n\n\n\n\nDRY principle: Don’t Repeat Yourself\n\nIt’s easier to fix/update code in one place than in 10\nLazy programming = best programming\n\nUse parameters to tweak function behavior (more customization)"
  },
  {
    "objectID": "slides/07-functions.html#steps-to-make-a-function",
    "href": "slides/07-functions.html#steps-to-make-a-function",
    "title": "Functions … Putting it all together",
    "section": "Steps to make a function",
    "text": "Steps to make a function\n\nWrite code to do the task once\nModify code to make it more abstract\n\nreplace variable names with understandable parameter names\nconsider variations on the task and decide if you want to include them\n\nWrap it in a function – define the function name and parameters\nAdd error handling - check inputs, necessary conditions"
  },
  {
    "objectID": "slides/07-functions.html#example-solve-the-quadratic-formula",
    "href": "slides/07-functions.html#example-solve-the-quadratic-formula",
    "title": "Functions … Putting it all together",
    "section": "Example: Solve the Quadratic Formula",
    "text": "Example: Solve the Quadratic Formula\nWrite some code\n\n# Assume we have an equation ax^2 + bx + c = 0\n# Solve for x\n\na = 1\nb = 5\nc = 2\n\nx1 = (-b + sqrt(b^2-4*a*c))/(2*a)\nx2 = (-b - sqrt(b^2-4*a*c))/(2*a)\n\nc(x1, x2)\n\n[1] -0.4384472 -4.5615528"
  },
  {
    "objectID": "slides/07-functions.html#example-solve-the-quadratic-formula-1",
    "href": "slides/07-functions.html#example-solve-the-quadratic-formula-1",
    "title": "Functions … Putting it all together",
    "section": "Example: Solve the Quadratic Formula",
    "text": "Example: Solve the Quadratic Formula\nAbstract the code\n\n# Assume we have an equation ax^2 + bx + c = 0\n# Solve for x\n\n# Defined outside -- make more readable names\nx2coeff = 1\nxcoeff = 5\nintcoeff = 2\n\n## Extra parameter\nunder_sqrt = xcoeff^2-4*x2coeff*intcoeff\n# need to check if under_sqrt is nonnegative\nif (under_sqrt &lt; 0) {\n  print(\"Determinant is negative. Zeros will be imaginary.\")\n}\n\nx1 = (-xcoeff + sqrt(under_sqrt))/(2*x2coeff)\nx2 = (-xcoeff - sqrt(under_sqrt))/(2*x2coeff)\n\nc(x1, x2)\n\n[1] -0.4384472 -4.5615528"
  },
  {
    "objectID": "slides/07-functions.html#example-solve-the-quadratic-formula-2",
    "href": "slides/07-functions.html#example-solve-the-quadratic-formula-2",
    "title": "Functions … Putting it all together",
    "section": "Example: Solve the Quadratic Formula",
    "text": "Example: Solve the Quadratic Formula\nWrap in a function\n\n# Assume we have an equation ax^2 + bx + c = 0\n# Solve for x\nquad_formula &lt;- function(x2coeff, xcoeff, intcoeff) {\n  ## Extra parameter\n  under_sqrt = xcoeff^2-4*x2coeff*intcoeff\n  \n  # need to check if under_sqrt is nonnegative\n  if (under_sqrt &lt; 0) {\n    print(\"Determinant is negative. Zeros will be imaginary.\")\n  }\n  \n  x1 = (-xcoeff + sqrt(under_sqrt))/(2*x2coeff)\n  x2 = (-xcoeff - sqrt(under_sqrt))/(2*x2coeff)\n  \n  return(c(x1, x2))\n}\n\n# Test the function\nquad_formula(1, 5, 2)\n\n[1] -0.4384472 -4.5615528\n\nquad_formula(x2coeff = 1, xcoeff = 5, intcoeff = 2)\n\n[1] -0.4384472 -4.5615528"
  },
  {
    "objectID": "slides/07-functions.html#example-solve-the-quadratic-formula-3",
    "href": "slides/07-functions.html#example-solve-the-quadratic-formula-3",
    "title": "Functions … Putting it all together",
    "section": "Example: Solve the Quadratic Formula",
    "text": "Example: Solve the Quadratic Formula\nError Handling\n\n# Assume we have an equation ax^2 + bx + c = 0\n# Solve for x\nquad_formula &lt;- function(x2coeff, xcoeff, intcoeff) {\n  # Ensure parameters are numeric before doing math with them\n  stopifnot(is.numeric(x2coeff) & is.numeric(xcoeff) & is.numeric(intcoeff))\n  \n  ## Extra parameter\n  under_sqrt = xcoeff^2-4*x2coeff*intcoeff\n  \n  # need to check if under_sqrt is nonnegative\n  if (under_sqrt &lt; 0) {\n    print(\"Determinant is negative. Zeros will be imaginary.\")\n  }\n  \n  x1 = (-xcoeff + sqrt(under_sqrt))/(2*x2coeff)\n  x2 = (-xcoeff - sqrt(under_sqrt))/(2*x2coeff)\n  \n  return(c(x1, x2))\n}\n\n# Test the function\nquad_formula(1, 5, 2)\n\n[1] -0.4384472 -4.5615528\n\nquad_formula(x2coeff = 1, xcoeff = 5, intcoeff = 2)\n\n[1] -0.4384472 -4.5615528\n\nquad_formula(\"A\", \"B\", \"C\")\n\nError in quad_formula(\"A\", \"B\", \"C\"): is.numeric(x2coeff) & is.numeric(xcoeff) & is.numeric(intcoeff) is not TRUE"
  },
  {
    "objectID": "slides/08-exam-review.html#general-rules",
    "href": "slides/08-exam-review.html#general-rules",
    "title": "Exam Review",
    "section": "General Rules",
    "text": "General Rules\n\nIn class\nOpen note and book\nNOT open internet\nExpect to be in class for the full 2h period\nBring a pencil and your computer (charged, please!)\nI will supply scratch paper"
  },
  {
    "objectID": "slides/08-exam-review.html#grading",
    "href": "slides/08-exam-review.html#grading",
    "title": "Exam Review",
    "section": "Grading",
    "text": "Grading\n\nYour goal is to demonstrate that you can do specific tasks in R and/or python\nDemonstrating the task in one language = 75% credit, both languages = 100% credit\nIn most (but not all) cases, you’ll have multiple tries at a task\nHints can be obtained by sacrificing some credit on a task\nIf you can’t get through a task, you can ask for the solution,\nsacrificing credit for that task attempt\n\nThis allows you to attempt the next part of the problem"
  },
  {
    "objectID": "slides/08-exam-review.html#format",
    "href": "slides/08-exam-review.html#format",
    "title": "Exam Review",
    "section": "Format",
    "text": "Format\n\nTwo multi-part problems\nEach part demonstrates a skill\n\nIdeally, you will have multiple chances to demonstrate a skill."
  },
  {
    "objectID": "slides/08-exam-review.html#tasks",
    "href": "slides/08-exam-review.html#tasks",
    "title": "Exam Review",
    "section": "Tasks",
    "text": "Tasks\nProgramming:\n\nInstall packages (wk 2-3)\nLoad packages and/or functions from packages (wk 3-5)\nUse functions someone else wrote (wk 3-4)\nLogical Indexing (wk 5)\nCreate Vectors and Data Frames (wk 5)\nIndex Vectors and Data Frames (wk 5)\nBasic String operations (print, repeat, paste)\nIf Statements (wk 6)\nWriting Functions (wk 7)\nChecking types/Validating user input (wk 7)"
  },
  {
    "objectID": "slides/08-exam-review.html#tasks-1",
    "href": "slides/08-exam-review.html#tasks-1",
    "title": "Exam Review",
    "section": "Tasks",
    "text": "Tasks\nComputational Thinking:\n\nProgram Flow maps (wk 6)\nCombining sub-problems (wk 6-7)\n\nReproducibility:\n\nUse quarto\nEdit code chunks or write new ones\nFormat non-code content appropriately\nCompile your document"
  }
]